<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Golang深度剖析</title>
      <link href="/%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%B7%A5%E5%85%B7/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Golang/202408Golang%E6%B7%B1%E5%BA%A6%E5%89%96%E6%9E%90/"/>
      <url>/%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%B7%A5%E5%85%B7/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Golang/202408Golang%E6%B7%B1%E5%BA%A6%E5%89%96%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h1 id="字符串存储与表示"><a href="#字符串存储与表示" class="headerlink" title="字符串存储与表示"></a>字符串存储与表示</h1><p><a href="https://cloud.tencent.com/developer/article/2029043">【Golang】深究字符串——从byte rune string到Unicode与UTF-8</a></p><h2 id="UNICODE"><a href="#UNICODE" class="headerlink" title="UNICODE"></a>UNICODE</h2><ol><li><p>ASCII码<br>通过数字电路的知识，我们知道使用二进制对信息进行编码与度量。最初现代计算机由美国人发明使用，自然而然就考虑把英语进行编码，所以<strong>ASCII码就是英语字符对应的二进制位</strong>，而且一直沿用至今，ASCII码占用1个字节，最高位统一规定为0，所以只使用了7位，一共可以表示27&#x3D;128个字符，包括32个不能打印的字符。</p></li><li><p>Unicode<br>现代计算机早已不是美国一家独大，互联网更是让世界互联互通。但是文字确实多种多样，各个国家拥有一套编码规则，同一个二进制数会被不同编码解释为不同符号。如果每次不把编码方式勾兑清楚，谁也不知道该怎么解码。有没有不需要勾兑的方式？有，就是<strong>抛开各个国家独有的编码方式，统一使用一个编码方式：Unicode</strong></p></li></ol><h2 id="UTF-8"><a href="#UTF-8" class="headerlink" title="UTF-8"></a>UTF-8</h2><ol start="3"><li>UTF-8<br><strong>Unicode规定了字符的二进制代码，但是却没有规定如何存储</strong>。而且，各个字符占的字节是可能不同的，比如汉字很多都有10几位二进制，可能需要2个字节，3个字节，甚至4个字节。虽有unicode对应，肯定是该多少字节就存多少字节，而不是每个字符都存相同大小字节，毕竟unicode有100多万，全存相同大小字节，肯定浪费空间。但是就有了最终要解决的问题：什么时候该读3个字节以表示1个字符，什么时候该读1个字节以表示字符？</li></ol><p><strong>UTF-8就是存储Unicode的方式</strong>，但不是唯一的，其他还有utf-16,utf-32</p><p>什么时候读1个字节的字符？<br>字节的第一位为0，后面7位为符号的unicode码。所以这样看，英语字母的utf-8和ascii一致。</p><p>什么时候读多个字节的字符？<br>对于有n个字节的字符，（n&gt;1）….其中第一个字节的高n位就为1，换句话说：</p><ol><li>第一个字节读到0，那就是读1个字节  </li><li>第一个字节读到n个1，就要读n个字节  </li><li>然后第一个字高n位后1位设为0，后续其他字节前两位都设为10</li></ol><figure class="highlight golang"><table><tr><td class="code"><pre><span class="line"><span class="number">0</span>xxxxxxx # 读<span class="number">1</span>个字节</span><br><span class="line"><span class="number">110</span>xxxxx <span class="number">10</span>xxxxxx # 读两个字节</span><br><span class="line"><span class="number">1110</span>xxxx <span class="number">10</span>xxxxxx <span class="number">10</span>xxxxxx #读<span class="number">3</span>个字节</span><br><span class="line"><span class="number">11110</span>xxx <span class="number">10</span>xxxxxx <span class="number">10</span>xxxxxx <span class="number">10</span>xxxxxx #读<span class="number">4</span>个字节</span><br><span class="line"></span><br><span class="line">Unicode符号范围     |        UTF<span class="number">-8</span>编码方式</span><br><span class="line">(十六进制)        |              （二进制）</span><br><span class="line">----------------------+---------------------------------------------</span><br><span class="line"><span class="number">0000</span> <span class="number">0000</span><span class="number">-0000</span> <span class="number">007</span>F | <span class="number">0</span>xxxxxxx</span><br><span class="line"><span class="number">0000</span> <span class="number">0080</span><span class="number">-0000</span> <span class="number">07</span>FF | <span class="number">110</span>xxxxx <span class="number">10</span>xxxxxx</span><br><span class="line"><span class="number">0000</span> <span class="number">0800</span><span class="number">-0000</span> FFFF | <span class="number">1110</span>xxxx <span class="number">10</span>xxxxxx <span class="number">10</span>xxxxxx</span><br><span class="line"><span class="number">0001</span> <span class="number">0000</span><span class="number">-0010</span> FFFF | <span class="number">11110</span>xxx <span class="number">10</span>xxxxxx <span class="number">10</span>xxxxxx <span class="number">10</span>xxxxxx</span><br></pre></td></tr></table></figure><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><p>字符串是Go 语言中最常用的基础数据类型之一，实际上字符串是一块连续的内存空间，一个由字符组成的数组，既然作为数组来说，它会占用一片连续的内存空间，这片连续的内存空间就存储了多个字节，整个字节数组组成了字符串</p><p>Go语言使用UTF-8编码，为此，Go在代码中引入了一个新术语，称为 rune。rune是int32的类型别名；byte其实是uint8的别名</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><blockquote><ol><li>unicode是一种编码方式，任意字符可以使用一个unicode单位表示，即int32，即rune</li><li>字符串由byte数组组成，即utf-8编码存储的unicode</li></ol><p>所以字符串比如“golang字符串”，对应[]rune的size是6+3，对应[]byte的size是6+9</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术与工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程语言 </tag>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>业务系统设计参考</title>
      <link href="/%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%B7%A5%E5%85%B7/%E4%B8%9A%E5%8A%A1%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/202203%E4%B8%9A%E5%8A%A1%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/"/>
      <url>/%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%B7%A5%E5%85%B7/%E4%B8%9A%E5%8A%A1%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/202203%E4%B8%9A%E5%8A%A1%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="开篇"><a href="#开篇" class="headerlink" title="开篇"></a>开篇</h1>]]></content>
      
      
      <categories>
          
          <category> 技术与工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 业务系统设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据学习</title>
      <link href="/%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%B7%A5%E5%85%B7/%E5%A4%A7%E6%95%B0%E6%8D%AE/201805%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/"/>
      <url>/%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%B7%A5%E5%85%B7/%E5%A4%A7%E6%95%B0%E6%8D%AE/201805%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="相关技术栈"><a href="#相关技术栈" class="headerlink" title="相关技术栈"></a>相关技术栈</h1><h2 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a>mysql</h2><h2 id="java开发套件"><a href="#java开发套件" class="headerlink" title="java开发套件"></a>java开发套件</h2><h2 id="hadoop"><a href="#hadoop" class="headerlink" title="hadoop"></a>hadoop</h2><h2 id="hive"><a href="#hive" class="headerlink" title="hive"></a>hive</h2><h2 id="hbase"><a href="#hbase" class="headerlink" title="hbase"></a>hbase</h2><h2 id="oozie"><a href="#oozie" class="headerlink" title="oozie"></a>oozie</h2><h2 id="flume"><a href="#flume" class="headerlink" title="flume"></a>flume</h2><h2 id="python"><a href="#python" class="headerlink" title="python"></a>python</h2><h2 id="kakfa"><a href="#kakfa" class="headerlink" title="kakfa"></a>kakfa</h2><h2 id="scala"><a href="#scala" class="headerlink" title="scala"></a>scala</h2><h2 id="spark"><a href="#spark" class="headerlink" title="spark"></a>spark</h2><h2 id="flink"><a href="#flink" class="headerlink" title="flink"></a>flink</h2><h2 id="elk"><a href="#elk" class="headerlink" title="elk"></a>elk</h2><h1 id="跟进记录归档"><a href="#跟进记录归档" class="headerlink" title="跟进记录归档"></a>跟进记录归档</h1><p><a href="https://www.zhihu.com/question/21380122/answer/301323291">我是学Java的，想尝试大数据和数据挖掘，该怎么规划学习？</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术与工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iphone使用配置和心得</title>
      <link href="/%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%B7%A5%E5%85%B7/%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/iphone%E6%89%8B%E6%9C%BA%E9%85%8D%E7%BD%AE/"/>
      <url>/%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%B7%A5%E5%85%B7/%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/iphone%E6%89%8B%E6%9C%BA%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<p>iphone并不是最好的手机，甚至很多时候也是捏着鼻子在用，只是使用习惯了，没有动力和精力迁移罢了</p><ol><li><strong>iphone12仍然是主力机里最薄最小的</strong>，这对我来说是最大的吸引力。现在的小米14也能做到相近的水平，保持关注</li><li>因为日常开发更多使用<strong>MacBook，跟iphone的互联互通最流畅</strong>，所以暂时没有把iphone换掉的动力</li><li>iphone的马达震动质感更强，换过一段时间的华为，总是错过消息。但是现在可以使用手环来补缺，<strong>消息提醒方面华为的手环还是很香的</strong></li><li>在此顺便cue一下<strong>iwatch，基本需要一天一充电</strong>，充完电还经常忘了带，妥妥的电子垃圾</li></ol><h1 id="iphone"><a href="#iphone" class="headerlink" title="iphone"></a>iphone</h1><p>软件配置</p><img src="/%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%B7%A5%E5%85%B7/%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/iphone%E6%89%8B%E6%9C%BA%E9%85%8D%E7%BD%AE/iphone%E4%B8%BB%E5%B1%8F.PNG" class="" title="iphone主屏"><img src="/%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%B7%A5%E5%85%B7/%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/iphone%E6%89%8B%E6%9C%BA%E9%85%8D%E7%BD%AE/iphone%E5%89%AF%E5%B1%8F.PNG" class="" title="iphone副屏"><img src="/%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%B7%A5%E5%85%B7/%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/iphone%E6%89%8B%E6%9C%BA%E9%85%8D%E7%BD%AE/iphone%E8%B4%9F%E5%B1%8F.png" class="" title="iphone负屏"><img src="/%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%B7%A5%E5%85%B7/%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/iphone%E6%89%8B%E6%9C%BA%E9%85%8D%E7%BD%AE/iphone%E8%BD%AF%E4%BB%B6%E5%88%97%E8%A1%A8.png" class="" title="iphone软件列表"><h2 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h2><ol><li><p><strong>备忘录APP</strong>和<strong>提醒事项APP</strong>都是实时同步，很好用。二者配合已经成为我的工作区，备忘录负责维护项目安排工作，提醒事项负责安排具体生活事项的执行时间</p><img src="/%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%B7%A5%E5%85%B7/%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/iphone%E6%89%8B%E6%9C%BA%E9%85%8D%E7%BD%AE/%E5%A4%87%E5%BF%98%E5%BD%95%E5%B7%A5%E4%BD%9C%E5%8C%BA.png" class="" title="备忘录工作区"><img src="/%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%B7%A5%E5%85%B7/%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/iphone%E6%89%8B%E6%9C%BA%E9%85%8D%E7%BD%AE/%E6%8F%90%E9%86%92%E4%BA%8B%E9%A1%B9%E5%B7%A5%E4%BD%9C%E5%8C%BA.png" class="" title="提醒事项工作区"></li><li><p><strong>屏幕使用时间APP</strong>不要全局共享，特别注意全部设备都要关闭，否则会出现不显示app图标的bug</p></li><li><p><strong>日历APP</strong>有一个致命缺陷，不能轻松的管理一个分类的日程，只能按照日期来看，也就是说其实没有办法快速查找和管理日程，比如maybe；schedule不能直接列出来，也就没办法提前做或者调整顺序</p></li></ol><h2 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h2><ol><li><strong>通讯录</strong>只存在于本机，垃圾玩意儿不好用。可以尝试都绑定到微信上</li><li>现在连电动车、手环都可以做到<strong>NFC复制</strong>，垃圾苹果至今没有开放，shame for apple!</li></ol>]]></content>
      
      
      <categories>
          
          <category> 工作环境配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iphone </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据调度任务技术研究</title>
      <link href="/%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%B7%A5%E5%85%B7/%E5%A4%A7%E6%95%B0%E6%8D%AE/202408%E5%A4%A7%E6%95%B0%E6%8D%AE%E4%BB%BB%E5%8A%A1%E8%B0%83%E5%BA%A6%E6%8A%80%E6%9C%AF%E7%A0%94%E7%A9%B6/"/>
      <url>/%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%B7%A5%E5%85%B7/%E5%A4%A7%E6%95%B0%E6%8D%AE/202408%E5%A4%A7%E6%95%B0%E6%8D%AE%E4%BB%BB%E5%8A%A1%E8%B0%83%E5%BA%A6%E6%8A%80%E6%9C%AF%E7%A0%94%E7%A9%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="数据地图"><a href="#数据地图" class="headerlink" title="数据地图"></a>数据地图</h1><p><a href="http://factory.data.ke.com/tableSearch">http://factory.data.ke.com/tableSearch</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术与工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>webRTC开发实战</title>
      <link href="/%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%B7%A5%E5%85%B7/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/202408WebRTC%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/"/>
      <url>/%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%B7%A5%E5%85%B7/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/202408WebRTC%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/</url>
      
        <content type="html"><![CDATA[<h1 id="声网"><a href="#声网" class="headerlink" title="声网"></a>声网</h1><h2 id="价格"><a href="#价格" class="headerlink" title="价格"></a>价格</h2><p>最基础版约合403.2元&#x2F;千小时 <img src="/%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%B7%A5%E5%85%B7/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/202408WebRTC%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/202408_shengwang_webrtc_price.png" class="" title="细节"></p><h2 id="控制台"><a href="#控制台" class="headerlink" title="控制台"></a>控制台</h2><p><a href="https://console.shengwang.cn/overview">https://console.shengwang.cn/overview</a></p><p>看起来应该选择 实时互动 RTC 这款产品；</p><h2 id="服务端开发"><a href="#服务端开发" class="headerlink" title="服务端开发"></a>服务端开发</h2><p><a href="https://doc.shengwang.cn/doc/rtc/restful/channel-management/operations/post-dev-v1-kicking-rule">服务端 API</a> 看起来是做项目运营管理用的，不是服务端开发</p><h2 id="客户端开发"><a href="#客户端开发" class="headerlink" title="客户端开发"></a>客户端开发</h2><p>所以相互通信的客户端，和云端的大模型pipeline，实际上在产品里对应的都是客户端API？</p><h1 id="火山"><a href="#火山" class="headerlink" title="火山"></a>火山</h1><h2 id="服务端开发-1"><a href="#服务端开发-1" class="headerlink" title="服务端开发"></a>服务端开发</h2><p>火山的<a href="https://www.volcengine.com/docs/6348/69815">服务端 OpenAPI 参考</a> 看起来可以在服务端实现虚拟人，与客户端通信</p>]]></content>
      
      
      <categories>
          
          <category> 技术与工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> webrtc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>原生多模态大模型及相关技术研究</title>
      <link href="/%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%B7%A5%E5%85%B7/%E5%A4%A7%E6%A8%A1%E5%9E%8B%E4%B8%8E%E5%A4%9A%E6%A8%A1%E6%80%81/202408%E5%8E%9F%E7%94%9F%E5%A4%9A%E6%A8%A1%E6%80%81%E5%A4%A7%E6%A8%A1%E5%9E%8B%E6%8A%80%E6%9C%AF%E7%A0%94%E7%A9%B6/"/>
      <url>/%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%B7%A5%E5%85%B7/%E5%A4%A7%E6%A8%A1%E5%9E%8B%E4%B8%8E%E5%A4%9A%E6%A8%A1%E6%80%81/202408%E5%8E%9F%E7%94%9F%E5%A4%9A%E6%A8%A1%E6%80%81%E5%A4%A7%E6%A8%A1%E5%9E%8B%E6%8A%80%E6%9C%AF%E7%A0%94%E7%A9%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="GPT4o"><a href="#GPT4o" class="headerlink" title="GPT4o"></a>GPT4o</h1><p>发布页 <a href="https://openai.com/index/hello-gpt-4o/">https://openai.com/index/hello-gpt-4o/</a></p><p>接口文档定义 <a href="https://platform.openai.com/docs/guides/chat-completions">https://platform.openai.com/docs/guides/chat-completions</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术与工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 多模态大模型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>新项目模板</title>
      <link href="/%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%B7%A5%E5%85%B7/%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%89%8B%E5%86%8C/%E6%96%B0%E9%A1%B9%E7%9B%AE%E6%A8%A1%E6%9D%BF/"/>
      <url>/%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%B7%A5%E5%85%B7/%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%89%8B%E5%86%8C/%E6%96%B0%E9%A1%B9%E7%9B%AE%E6%A8%A1%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<h1 id="新项目模板"><a href="#新项目模板" class="headerlink" title="新项目模板"></a>新项目模板</h1><p>来自持续工作的方法和技巧</p><h2 id="简略版"><a href="#简略版" class="headerlink" title="简略版"></a>简略版</h2><ol><li>定义目标和原则。</li><li>展望结果。</li><li>头脑风暴&#x2F;集思广益。</li><li>组织整理。</li><li>明确下一步的行动方案。</li></ol><h2 id="学习方法"><a href="#学习方法" class="headerlink" title="学习方法"></a>学习方法</h2><pre><code>概念：是什么，有什么用。概念是一种语言实操：怎么用架构：怎么做到的落地：有什么优势；有什么限制优化：在场景落地的重难点八股：直接面向面试（即money）编程</code></pre><h2 id="STAR完整版"><a href="#STAR完整版" class="headerlink" title="STAR完整版"></a>STAR完整版</h2><ol><li>Situation<ol><li>项目背景。</li><li>当前最重要的一件事是什么（为什么是它）？</li><li>作用的对象是哪些？</li><li>还需要哪些输入？</li><li>能达成什么效果</li></ol></li><li>Task。<ol><li>自己负责的部分，注意定义边界，</li><li>解决了什么问题，</li><li>目标和任务拆分是什么</li></ol></li><li>Action。<ol><li>如何设计，各模块功能，</li><li>核心算法，技术选型是如何达成的，</li><li>清楚的知道每一个组件的工作流程以及实现原理。</li><li>怎么实现，难点在哪？</li><li>需要哪些团队合作（什么人，需要分别贡献什么）</li></ol></li><li>Result。<ol><li>达成的效果，</li><li>最好有数据能够支撑。</li></ol></li><li>你自己有哪些思考？</li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术与工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工程师手册 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>webRTC技术调研</title>
      <link href="/%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%B7%A5%E5%85%B7/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/202408WebRTC%E6%8A%80%E6%9C%AF%E7%A0%94%E7%A9%B6/"/>
      <url>/%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%B7%A5%E5%85%B7/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/202408WebRTC%E6%8A%80%E6%9C%AF%E7%A0%94%E7%A9%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="音频3A算法"><a href="#音频3A算法" class="headerlink" title="音频3A算法"></a>音频3A算法</h1><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>手机电脑等智能设备的普及，AI智能、5G等技术的不断发展，<strong>语音通信成为了最方便快捷的远程交流方式</strong>，会议全向麦克风、会议一体化终端等会议系统逐渐成为企业经营中的重要工具。语音质量决定了企业远程沟通协作效果，其中噪音和回声能够严重影响到语音预处理后的质量，从而降低参会人员对另一方语音的接收完整度和准确性。我们知道影响通话质量的主要因素是噪声和回声，其中噪声是语音信号在采集、传输、编码等处理过程中的无用成分，而回声就是在通话过程中从听筒听到自己讲话的声音。噪音和回声的存在令人难以忍受，<strong>如何降低噪声及回声对语音信号的影响至关重要</strong>，而音频3A算法的产生就是为了解决这些问题。</p><h2 id="是什么"><a href="#是什么" class="headerlink" title="是什么"></a>是什么</h2><p>音频数据的处理过程有个预处理过程，就是在音频数据采集完成之后的一步，音频的预处理就是用的3A处理。啸叫和回声是因为扬声器发出的声音被麦克风再拾取导致的。音频3A算法主要包含以下三个方面：</p><p>(1).声学回声消除（AEC）</p><p>(2).背景噪声抑制（ANS）</p><p>(3).自动增益控制（AGC）</p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>1、AEC回声消除算法原理</p><p>回声消除（AEC）是指在二线传输的两个方向上同时间、同频谱地占用线路，在线路两个方向传输的信号完全混在一起，本端发信号的回波就成为了本端信号的干扰信号，利用自适滤波器可抵消回波以达到较好的接收信号质量，即为回声消除。<strong>回声消除的原理就是利用接收到的音频与本地采集的音频做对比，添加反相的人造回声，将远端的声音消除</strong>。</p><p>2、ANS背景噪声抑制算法原理</p><p>背景噪声抑制（ANS）指的是将声音中的背景噪声识别并进行消除的处理。背景噪声分为平衡噪声和瞬时噪声，<strong>平稳噪声频谱稳定，频谱能量方差小，利用噪声的特点，对音频数据添加反向波形处理，即可消除噪声。目前，对于平稳的噪声处理已经有很多种简单方法能够进行成功抑制，但是对于生活中常见的一些瞬态噪声却没有过多解决的好办法</strong>。</p><p>瞬态噪声的共同特点就是突发性极强，在时域上呈振荡衰弱的形式出现，持续时间在十几毫秒至上百毫秒不等，在频域上分布很宽，所以在频域上瞬态噪声的频谱基本上都是和正常的语音的频谱混叠在一起的很难进行抑制。</p><p>3、AGC自动增益算法原理</p><p>自动增益控制（AGC）指当直放站工作于最大增益且输出为最大功率时，增加输入信号电平，提高直放站对输出信号电平控制的能力。<strong>其主要用于调整音量幅值，提高语音通信系统在带噪声环境中的性能</strong>。人正常交谈的音量在40-60dB之间，低于25dB的声音听起来很吃力，而超过100dB的声音会让人感到不适，AGC的作用就是将音量调整到人接受的范围。</p><p>音频响度及麦克风拾音控制是保证音视频沟通质量的重要技术手段，一般来说，音频标准、传输条件、人为失误等因素都可能导致音频信号之间出现声音突变或者响度不一致的情况，这时候就需要对音频信号放大或缩小以得到自然清晰的语音通信。</p>]]></content>
      
      
      <categories>
          
          <category> 技术与工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> webrtc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搞定-工作方法与艺术</title>
      <link href="/journaling/%E6%80%8E%E4%B9%88%E8%AF%BB/202407%E6%90%9E%E5%AE%9A-%E5%B7%A5%E4%BD%9C%E6%96%B9%E6%B3%95%E4%B8%8E%E8%89%BA%E6%9C%AF/"/>
      <url>/journaling/%E6%80%8E%E4%B9%88%E8%AF%BB/202407%E6%90%9E%E5%AE%9A-%E5%B7%A5%E4%BD%9C%E6%96%B9%E6%B3%95%E4%B8%8E%E8%89%BA%E6%9C%AF/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>深度学习入门</title>
      <link href="/journaling/%E6%80%8E%E4%B9%88%E8%AF%BB/202409%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%85%A5%E9%97%A8/"/>
      <url>/journaling/%E6%80%8E%E4%B9%88%E8%AF%BB/202409%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="跟进记录归档"><a href="#跟进记录归档" class="headerlink" title="跟进记录归档"></a>跟进记录归档</h1><p>2024-08-26 10:46:39 从韩阳分享开始，入门深度学习。首先是分享时的几个问题：</p><ol><li>为什么首字最慢，后面计算过程是类似的</li><li>第一个字是怎么生成的</li><li>纬度不可能枚举，怎么找到一个字的</li><li>既然都是数值计算，为什么相同输入不是相同输出</li><li>数据量大小具体在哪个位置产生影响</li></ol><p>两本书：</p><ol><li>基于Python的理论与实现 – 深度学习入门</li><li>深入浅出神经网络与深度学习</li></ol>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
            <tag> 技术与工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>设计模式入门</title>
      <link href="/journaling/%E6%80%8E%E4%B9%88%E8%AF%BB/202408%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%85%A5%E9%97%A8/"/>
      <url>/journaling/%E6%80%8E%E4%B9%88%E8%AF%BB/202408%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
            <tag> 技术与工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>灵感书单</title>
      <link href="/journaling/%E6%80%8E%E4%B9%88%E8%AF%BB/%E7%81%B5%E6%84%9F%E4%B9%A6%E5%8D%95/"/>
      <url>/journaling/%E6%80%8E%E4%B9%88%E8%AF%BB/%E7%81%B5%E6%84%9F%E4%B9%A6%E5%8D%95/</url>
      
        <content type="html"><![CDATA[<h1 id="未读书单"><a href="#未读书单" class="headerlink" title="未读书单"></a>未读书单</h1><p>第一版按照onedrive中的分类</p><table><thead><tr><th>分类</th><th>书名</th><th>推荐语</th><th>添加时间</th></tr></thead><tbody><tr><td>编程能力</td><td>Head first 设计模式</td><td>了解设计模式和mvc</td><td></td></tr><tr><td></td><td>领域驱动设计</td><td></td><td></td></tr><tr><td></td><td>编程之道</td><td></td><td>2018年5月15日</td></tr><tr><td>公司制度</td><td></td><td></td><td></td></tr><tr><td>行业研究</td><td>深入浅出神经网络与深度学习</td><td></td><td>2023-04-08</td></tr><tr><td>八股</td><td></td><td></td><td></td></tr><tr><td>家庭与我</td><td></td><td></td><td></td></tr><tr><td>通俗文学</td><td>百年孤独</td><td></td><td></td></tr><tr><td>人物传记</td><td></td><td></td><td></td></tr><tr><td>方法论</td><td>思考，快与慢</td><td>尝试发现自己思维的优势与不足，避免无效努力</td><td>2024-06-20</td></tr><tr><td></td><td>进化：快速打开局面的职场丛林法则</td><td>非必选</td><td>2018年5月15日</td></tr><tr><td>理财</td><td>曼昆经济学</td><td></td><td></td></tr><tr><td>政经时闻</td><td>理想国</td><td></td><td>2024-06-20</td></tr><tr><td>文法哲史</td><td>血酬定律，潜规则</td><td>之后看大明王朝</td><td></td></tr><tr><td>人文社科</td><td></td><td>注意社会心理学top10</td><td></td></tr><tr><td>博弈论</td><td></td><td></td><td></td></tr><tr><td>通往奴役之路</td><td></td><td></td><td></td></tr><tr><td>独裁者手册 &amp; 商君书</td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td></tr></tbody></table><p>2024年06月24日16:45:51 从豆瓣网页版拷贝，待整理</p><pre><code>宝贵的人生建议2024-02-15把时间当作朋友2023-02-15变态心理学（第6版）2024-06-24社会心理学2024-06-24软件架构基础（影印版）2024-05-26架构整洁之道2024-05-26富妈妈穷妈妈2024-05-26一本书读懂财报2024-05-26财富自由之路2024-05-26投资最重要的事2024-05-26投资中最简单的事2024-05-26彼得·林奇的成功投资2024-05-26聪明的投资者2024-05-26百万富翁快车道2024-05-26穷查理宝典2024-05-26富爸爸，穷爸爸2024-05-26小狗钱钱2024-05-26月亮与六便士2024-04-30给一个未出生孩子的信2024-04-18医生最想让你做的事2024-04-14幸福的家庭2024-04-14通往奴役之路2024-04-14态度改变与社会影响2024-04-13决策与判断2024-04-13影响力2024-04-13亲密关系2024-04-13路西法效应2024-04-13狂热分子2024-04-13社会性动物2024-04-13社会心理学2024-04-13逃避自由2024-04-13与自己和解2024-04-13瓦尔登湖2024-04-05战争与和平2024-04-05论犯罪与刑罚2024-03-30自剖2024-03-23高效能人士的七个习惯2024-03-17详谈：赵鹏2024-03-08权力与繁荣2024-03-07西方哲学史（第9版）2024-03-03与神对话2024-03-03沉思录2024-02-25中国社会各阶层分析报告2024-02-25枪炮、病菌与钢铁2024-02-21乌合之众2024-02-19若干重大决策与事件的回顾（上下卷）2024-02-15东京百年史2024-02-15分布式系统应用设计2024-02-15笔记的方法2024-02-15Redis设计与实现2024-02-15代码整洁之道2024-02-15美丽新世界2024-02-15十日谈：新冠时期故事集2024-02-15十日谈2024-02-15神们自己2024-02-15未来的序曲2024-02-15二十年目睹之怪现状2024-02-15一地鸡毛2024-02-15哲学起步2024-02-15时间从来不语，却回答了所有问题2024-02-15邓小平时代2024-02-15百年孤独2024-02-15高情商沟通2024-02-15人性的弱点2024-02-15浪潮之巅2024-02-15变量2024-02-15曾国藩的正面与侧面2024-02-15亲密关系2024-02-15非暴力沟通2024-02-15心理学与生活（第19版）2024-02-15价值2024-02-15江村经济2024-02-15曾国藩家书2024-02-15唐浩明谈曾国藩齐家之道2024-02-15繁花2024-02-15俞军产品方法论2024-02-15工作、消费主义和新穷人2024-02-15为什么伟大不能被计划2024-02-15沧浪之水2024-02-15繁花2024-02-15认知觉醒2024-02-15北京古迹史话2024-02-15独裁者手册2024-02-15研究的方法2024-02-15学习的方法2024-02-15影响力2024-02-15自我与本我2024-02-15打开心智2024-02-15勤勉的昏君崇祯2023-12-04时间的秩序2023-09-25变量4：大国的腾挪2023-04-27兴盛与危机2023-04-12学会提问 (原书第12版)2023-04-11刀锋2023-04-11爱的艺术2023-04-11批判性思维（原书第5版）2023-04-08沧浪之水2023-03-1521世纪的管理挑战2023-02-27黑客与画家2023-02-27父权制与资本主义2023-02-23公正2023-02-15HBase原理与实践2023-02-15成功，动机与目标2023-02-14中国历代政治得失2023-02-10数据分析之道：用数据思维指导业务实战2023-02-10腾讯传2023-02-10自私的基因2023-02-10华为数字化转型之道2023-02-10华为数据之道2023-02-10数字人文导论2023-02-10王阳明全集2023-02-10逆向管理2023-02-10置身事内2023-02-10TED演讲的秘密2023-02-10向上生长2023-02-10管理的实践2023-02-10影响力2023-02-10卓有成效的管理者2023-02-10要领2023-02-10态度2023-02-10用户体验要素：以用户为中心的产品设计（原书第2版）2023-02-10深层认知2023-02-10见识2023-02-10结构性改革2023-02-10格局2023-02-10联盟2023-02-07领导梯队2023-02-07筚路维艰2022-09-17江村经济2022-09-17万历十五年2022-09-17高塔下的小镇2022-05-14赢2022-03-17钢铁是怎样炼成的2022-03-04永恒的终结2022-03-04包法利夫人2021-12-23影响力2021-11-26最後的問題2021-11-12走出软件作坊2021-10-31人月神话2021-10-31安娜·卡列尼娜2021-10-30资本社会的17个矛盾2020-07-12</code></pre><p>2024年06月24日17:08:59 从onedrive文件夹中直接list，待整理</p><pre><code>├── 方法论│   ├── 35岁前要做的33件事.mobi│   ├── FBI教你破解身体语言（插图版）.mobi│   ├── facebook效应.mobi│   ├── 演讲.docx│   ├── 人件.mobi│   ├── 气场.mobi│   ├── 硬球.mobi│   ├── 面试one.docx│   ├── 影响力.mobi│   ├── 潜规则.mobi│   ├── 打开心智 (李睿秋) (Z-Library).epub│   ├── 尽管去做 ——无压工作的艺术.mobi│   ├── 营销管理(第13版).mobi│   ├── 乌合之众.mobi│   ├── 书读完了.mobi│   ├── 优势谈判.mobi│   ├── 围炉夜话.mobi│   ├── 幸福了吗.mobi│   ├── 醒世恒言.mobi│   ├── 随遇而安_孟非.mobi│   ├── 非暴力沟通 (马歇尔•卢森堡) (Z-Library).epub│   ├── 人性的弱点.mobi│   ├── 心理控制术.mobi│   ├── 麦肯锡方法.mobi│   ├── 演讲与口才.txt│   ├── 我不是教你诈(1－5合集).mobi│   ├── 不生病的智慧.mobi│   ├── 别为小事抓狂.mobi│   ├── 我们如何思维.mobi│   ├── 把时间当朋友.mobi│   ├── 餐巾纸的背面.mobi│   ├── 上班族必懂的office天择定律.mobi│   ├── 宝贵的人生建议 (凯文·凯利) (Z-Library).epub│   ├── 把时间当作朋友(第3版) (李笑来) (Z-Library).epub│   ├── 乔布斯的演讲稿.docx│   ├── 如何阅读一本书.mobi│   ├── 拆掉思维里的墙.mobi│   ├── 遇见未知的自己.mobi│   ├── 免费游戏的陷阱.txt│   ├── 遇见未知的自己.txt│   ├── 好妈妈胜过好老师.mobi│   ├── 怎样说话才打动人.mobi│   ├── 蔡康永的说话之道.mobi│   ├── 按自己的意愿过一生 [王潇]【微信：zsbyg199】.mobi│   ├── 大学生是怎么废掉的.pdf│   ├── 金字塔原理（麦肯锡40年经典培训教材） (芭芭拉·明托) (Z-Library).epub│   ├── 搞定Ⅰ无压工作的艺术(全球工作者都在学习使用的GTD时间管理系统) (戴维·艾伦) (Z-Library).epub│   ├── 每天懂一点色彩心理学.mobi│   ├── 《人性的弱点》完整版.txt│   ├── 当我谈跑步时，我谈些什么.mobi│   ├── 乌合之众——大众心理研究.txt│   ├── 大学只有四年，绝对经不起挥霍.docx│   └── 思考的技术：思考力决定竞争力（节选）.mobi├── 人物传记│   ├── 李鸿章传.mobi│   ├── 王尔德童话.mobi│   ├── 纳兰词笺注.mobi│   └── 乔布斯的魔力演讲.mobi├── 家庭与我│   ├── 中国生育成本报告2022版.pdf│   └── 亲密关系（十周年纪念版） (罗兰·米勒,Rowland S. Miller) (Z-Library).epub├── 政经时闻│   ├── 35岁前要上的33堂理财课.mobi│   ├── Rework － Jason Fried _ Da(和谐)vid Heinemeier Hansson.mobi│   ├── W.钱·金___莫博涅.蓝海战略.mobi│   ├── 价值 (张磊 [张磊]) (Z-Library).epub│   ├── 华尔街.mobi│   ├── 战国策.mobi│   ├── 乡土中国 (费孝通) (Z-Library).epub│   ├── 江村经济 (费孝通) (Z-Library).epub│   ├── 中县干部 (冯军旗) (Z-Library).pdf│   ├── 生育制度 (中学图书馆文库) (费孝通 [费孝通]) (Z-Library).epub│   ├── 《新民说+坐待天明》+作者：许章润.mobi│   ├── 大败局上-吴晓波.txt│   ├── 大败局下-吴晓波.txt│   ├── 万物简史.mobi│   ├── 价格理论.mobi│   ├── 大而不倒.mobi│   ├── 时间简史.mobi│   ├── 浪潮之巅.mobi│   ├── 证券分析.mobi│   ├── 黄金时代.mobi│   ├── 大而不倒.txt│   ├── 浩荡两千年(全文阅读).txt│   ├── 东京百年史.mobi│   ├── 十亿消费者.mobi│   ├── 卢瑟经济学.mobi│   ├── 推销员之死.mobi│   ├── 时代三部曲.mobi│   ├── 浩荡两千年.mobi│   ├── 激荡三十年.mobi│   ├── 贫穷的本质.mobi│   ├── 跌荡一百年.mobi│   ├── 金融的逻辑.mobi│   ├── 推销员之死.txt│   ├── 贫穷的本质.txt│   ├── 跌荡一百年.txt│   ├── 毛泽东选集1-5（全）.rar│   ├── 毛泽东选集_1-5卷.mobi│   ├── 通往奴役之路(全文阅读).txt│   ├── 上帝掷骰子吗.mobi│   ├── 大败局（上）.mobi│   ├── 大败局（下）.mobi│   ├── 富爸爸穷爸爸.mobi│   ├── 通往奴役之路.mobi│   ├── 富爸爸穷爸爸.txt│   ├── 《浪潮之巅》TXT下载（全本）作者：吴军.txt│   ├── 原来这才是春秋.mobi│   ├── 曼昆经济学原理.mobi│   ├── 朱镕基答记者问.mobi│   ├── 牛奶可乐经济学.mobi│   ├── 我们台湾这些年_讲述台湾老百姓自己的故事.mobi│   ├── 中国历代政治得失 (钱穆) (Z-Library).epub│   ├── 历代经济变革得失 - 吴晓波.mobi│   ├── 活着就为改变世界.mobi│   ├── 中国生育成本报告2022版.pdf│   ├── 历史是个什么玩意儿.mobi│   ├── 格雷厄姆论价值投资.mobi│   ├── 谷歌吴军：数学之美.mobi│   ├── 资治通鉴（柏杨版）.mobi│   ├── 毛泽东选集（第一卷）.mobi│   ├── 毛泽东选集（第三卷）.mobi│   ├── 毛泽东选集（第二卷）.mobi│   ├── 毛泽东选集（第四卷）.mobi│   ├── 从总体支配到技术治理_基于中国30年改革经验的社会学分析_渠敬东.caj│   ├── 八次危机中国的真实经验 (温铁军) (Z-Library).epub│   ├── 东京百年史：从江户到昭和-爱德华·赛登施蒂克.txt│   ├── 为什么中国人勤劳而不富有.mobi│   ├── 经济学的思维方式（节选）.mobi│   ├── 置身事内：中国政府与经济发展 (兰小欢) (Z-Library).epub│   ├── 财务自由之路系列（全六册）【全球销量1000万册，连续110周雄居德国图书排行榜榜首！】 (博多·舍费尔) (Z-Library).epub│   ├── 哈耶克作品集：通往奴役之路自由宪章致命的自负 ([英]哈耶克) (Z-Library).mobi│   └── 独裁者手册：为什么坏行为几乎总是好政治（补全版） (布鲁斯·布鲁诺·德·梅斯奎塔,阿拉斯泰尔·史密斯) (Z-Library).epub├── 文法哲史│   ├── MaSiLuo.pdf│   ├── [新世纪万有文库]理想丈夫与不可儿戏-王尔德的两出喜剧.余光中译.辽宁教育出版社(1998).pdf│   ├── [外国名人书话系列]王尔德读书随笔[爱尔兰]王尔德.张介明译.上海三联书店(1999).pdf│   ├── 论语.mobi│   ├── 散文诗.docx│   ├── 巨婴国.mobi│   ├── 叫魂：1768年中国妖术大恐慌.epub│   ├── 食南之徒 (马伯庸) (Z-Library).epub│   ├── 乐府诗集.mobi│   ├── 警世通言.mobi│   ├── 论语全解.mobi│   ├── 社会转型_发展社会学的新议题_孙立平.caj│   ├── 变态心理学.azw3│   ├── 论美国的民主.mobi│   ├── 马斯洛人本哲学 (马斯洛 [马斯洛]) (Z-Library).epub│   ├── 道德经古今正解.mobi│   ├── 郑渊洁童话全集.mobi│   ├── 郑渊洁童话全集.txt│   ├── 对重刑主义的忧思_顾德瑞.caj│   ├── 二十年目睹之怪现状.mobi│   ├── 笔杆子、画笔和毒药[爱尔兰]王尔德.杨东霞、罗汉等译.浙江文艺出版社(2007).pdf│   ├── 作为意志和表象的世界.mobi│   ├── 怪诞行为学（升级版）.mobi│   ├── 两极化刑事政策之批判_黄华生.caj│   ├── 对我国重刑主义的反思_胡学相.caj│   ├── 作为意志和表象的世界_叔本华.txt│   ├── 东京百年史从江户到昭和1867-1989 (爱德华·赛登施蒂克, 谢思远, 刘娜) (Z-Library).epub│   ├── 法家重刑思想的逻辑分析_霍存福.caj│   ├── 崇祯往事：明帝国最后的图景（禁书 崇祯：勤政的亡国君 第一版） (陈梧桐) (Z-Library).epub│   └── 给一个未出生孩子的信（剖心之作，一个女人献给世界上所有女人的书，也是一个女人献给世界上所有“男人”的书 理想国出品） (奥丽娅娜·法拉奇) (Z-Library).epub├── 编程能力│   ├── 1097825528836019620.JPG│   ├── 11936297069687671408.PNG│   ├── 13577974351240529508.JPG│   ├── 2022-故障全流程及处理规范宣讲.pptx│   ├── 20220311——AIT.pptx│   ├── 2022年语音语言技术部质量宣讲.pdf│   ├── 21年至今故障整理-先刚老师.pptx│   ├── 51CTO下载-SQL学习指南(第2版).pdf│   ├── BRPC开发手册.pdf│   ├── C++ Primer Plus（第6版）_中文版_带书签_超清.pdf│   ├── C++ Primer（第5版）_带书签_高清完整版.pdf│   ├── C++ 程序设计语言：第1~3部分（原书第4版）.pdf│   ├── C++ 程序设计语言：第4部分 标准库（原书第4版）.pdf│   ├── C++编程思想（两卷合订本）.pdf│   ├── DevOps软件架构师行动指南@www.java1234.com.pdf│   ├── FunctionalProgrammingForTheRestOfUs.cn.md│   ├── Getting Real － 37signals.mobi│   ├── Go工程效率实践.pptx│   ├── LeetCode 101 - A LeetCode Grinding Guide (C++ Version).pdf│   ├── Linux基础知识体系图│   │   ├── 1 基础篇.png│   │   ├── 2 系统操作篇.png│   │   ├── 3 系统管理篇.png│   │   ├── 4 Shell篇.png│   │   ├── 5 文本操作篇.png│   │   ├── 6 服务管理篇.png│   │   └── 完整版-Linux基础知识体系.png│   ├── Linux多线程服务端编程使用muduo C++网络库 (陈硕 [陈硕]) (Z-Library).epub│   ├── MySQL最佳实践.pdf│   ├── Redis设计与实现 (黄健宏) (Z-Library).epub│   ├── Spring揭秘.pdf│   ├── [代码整洁之道].(美)马丁.扫描版.pdf│   ├── deloitte-cn-innovation-conversational-ai-is-reshaping-the-human-machine-interac.pdf│   ├── designpatterns1.jpg│   ├── designpatterns2.jpg│   ├── game-programmer-zh-cn.pdf│   ├── modern-cpp-tutorial-zh-cn.pdf│   ├── mysql5.7-manual-en.a4.pdf│   ├── zh-google-styleguide-20220529.pdf│   ├── 剑指OFFER  名企面试官精讲典型编程题  第2版.pdf│   ├── 设计模式.jpg│   ├── 深入理解Java虚拟机：JVM高级特性与最佳实践（第3版） 周志明.pdf│   ├── 代码整洁之道 (马丁(Robert C. Martin)) (Z-Library).epub│   ├── 【买卖真房源】400语音识别宣导材料-20220222.pptx│   ├── 杂事中的小幸福_傅昆.pptx│   ├── 服务云技术方案评审-0710.pptx│   ├── 小贝训练场用户手册0222.pptx│   ├── 【云课堂】第七期第2讲《顺风车稳定性实践》.pdf│   ├── 服务稳定性建设教科书-贝壳语音.pdf│   ├── 推荐系统总结思维导图.jpg│   ├── 数据密集型应用系统设计 (Martin Kleppmann) (Z-Library).epub│   ├── 家装现场委托标准作业规范_1027.pptx│   └── 凤凰架构：构建可靠的大型分布式系统 (周志明) (Z-Library).epub├── 行业研究│   ├── 银行数字化转型(一部指导银行业进行数字化转型的方法论著作，为银行的数字化转型给出了完整的方案。) (付晓岩 [付晓岩]) (Z-Library).epub│   ├── 神经网络与深度学习 (邱锡鹏) (Z-Library).pdf│   ├── 华为数字化转型之道 (华为公司企业架构与变革管理部) (Z-Library).epub│   └── 俞军产品方法论（互联网产品界里程碑式作品，产品经理进阶读物。字节跳动CEO张一鸣、百度CTO刘建国鼎力推荐。） (俞军 [俞军]) (Z-Library).epub├── 通俗文学│   ├── 围城.TXT│   ├── 孟子.mobi│   ├── 道连·葛雷的画像[爱尔兰]王尔德.荣如德译.上海译文出版社(2006).pdf│   ├── 全宋词.mobi│   ├── 沉思录.mobi│   ├── 钱锺书.宋诗选注.mobi│   ├── 狱中记[爱尔兰]王尔德.孙宜学译.南海出版公司(1998).pdf│   ├── 沧浪之水 (阎真) (Z-Library).epub│   ├── 百年孤独 (根据马尔克斯指定版本翻译,未做任何增删) (加西亚•马尔克斯, 范晔) (Z-Library).epub│   ├── 人类简史.mobi│   ├── 太平广记.mobi│   ├── 浮生六记.mobi│   ├── 浮生六记.txt│   ├── 李嘉诚的7封信.docx│   ├── 曾国藩家书 - 曾国藩.mobi│   ├── 唐诗三百首.mobi│   ├── 病菌与钢铁.mobi│   ├── 社会契约论.mobi│   ├── 王尔德全集.第1卷.小说童话.荣如德、巴金等译.pdf│   ├── 王尔德全集.第2卷.戏剧.王阳等译.pdf│   ├── 王尔德全集.第3卷.诗歌.杨烈、黄杲炘等译.pdf│   ├── 王尔德全集.第4卷.评论随笔.杨东霞、杨烈等译.pdf│   ├── 王尔德全集.第5卷.书信-上.苏福忠、高兴等译.pdf│   ├── 王尔德全集.第6卷.书信-下.常绍民、沈弘等译.pdf│   ├── 王尔德诗选[英]王尔德.袁宪军译.福建教育出版社(2010).pdf│   ├── 灵魂的毁灭[爱尔兰]王尔德.姜允麟译.黑龙江人民出版社(1988).pdf│   ├── 世说新语译注.mobi│   ├── 仓央嘉措诗集.mobi│   ├── 老子白话今译.mobi│   ├── 王尔德喜剧选[爱尔兰]王尔德.张南峰译.海峡文艺出版社(1990).pdf│   ├── 王尔德作品集[爱尔兰]王尔德.黄源深等译.人民文学出版社(2001).pdf│   ├── 唐诗三百首补注.mobi│   ├── 百家讲坛－和珅.mobi│   ├── 百家讲坛－水浒.mobi│   ├── 百家讲坛－老子.mobi│   ├── 假如给我三天光明.mobi│   ├── 百家讲坛－多尔衮.mobi│   ├── 百家讲坛－讲聊斋.mobi│   ├── 百家讲坛－读史记.mobi│   ├── 假如给我三天光明.txt│   ├── 枪炮、病菌与钢铁.txt│   ├── 曾国藩的正面与侧面 完整版.mobi│   ├── 百家讲坛－二战风云.mobi│   ├── 百家讲坛－动物世界.mobi│   ├── 百家讲坛－大师语录.mobi│   ├── 百家讲坛－明十七帝.mobi│   ├── 百家讲坛－清十二帝.mobi│   ├── 百家讲坛－生活保健.mobi│   ├── 百家讲坛－科技之光.mobi│   ├── 百家讲坛－笑书神侠.mobi│   ├── 百家讲坛－艺术漫谈.mobi│   ├── 百家讲坛－教育与成功.mobi│   ├── 百家讲坛－经济与社会.mobi│   ├── 百家讲坛－道德与法律.mobi│   ├── 社会契约论〔法〕卢梭.txt│   ├── 百家讲坛－刘心武谈红楼.mobi│   ├── 百家讲坛－历史与文化篇.mobi│   ├── 百家讲坛－外国文艺欣赏.mobi│   ├── 百家讲坛－金正昆谈礼仪.mobi│   ├── 易中天：先秦诸子百家争鸣.mobi│   └── 谎言的衰落：王尔德艺术批评文选.萧易译.江苏教育出版社(2004).pdf</code></pre>]]></content>
      
      
      <categories>
          
          <category> 书单 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 书单 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>交互式提示工程入门</title>
      <link href="/%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%B7%A5%E5%85%B7/%E5%A4%A7%E6%A8%A1%E5%9E%8B%E4%B8%8E%E5%A4%9A%E6%A8%A1%E6%80%81/202408%E4%BA%A4%E4%BA%92%E5%BC%8F%E6%8F%90%E7%A4%BA%E5%B7%A5%E7%A8%8B%E5%85%A5%E9%97%A8/"/>
      <url>/%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%B7%A5%E5%85%B7/%E5%A4%A7%E6%A8%A1%E5%9E%8B%E4%B8%8E%E5%A4%9A%E6%A8%A1%E6%80%81/202408%E4%BA%A4%E4%BA%92%E5%BC%8F%E6%8F%90%E7%A4%BA%E5%B7%A5%E7%A8%8B%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p>使用chatgpt-4omini做测试 <a href="https://chatgpt.com/">https://chatgpt.com/</a></p><h1 id="跟进记录归档"><a href="#跟进记录归档" class="headerlink" title="跟进记录归档"></a>跟进记录归档</h1><p>2024-08-26 11:07:47 最初来自眼镜交互场景。应邹伟要求，沉淀一波，搞个口语交互场景下的prompt经验分享</p><p>2024-08-26 11:08:28 参考资料</p><ol><li>Anthropic：从入门到精通交互式提示工程教程 <a href="https://github.com/anthropics/prompt-eng-interactive-tutorial">https://github.com/anthropics/prompt-eng-interactive-tutorial</a></li><li><a href="https://docs.anthropic.com/en/release-notes/system-prompts">https://docs.anthropic.com/en/release-notes/system-prompts</a></li><li>尚尔昕的分享资料</li><li>其他资料。搜索 Prompt engineering</li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术与工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大模型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>深度学习部署入门</title>
      <link href="/%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%B7%A5%E5%85%B7/%E5%A4%A7%E6%A8%A1%E5%9E%8B%E4%B8%8E%E5%A4%9A%E6%A8%A1%E6%80%81/202408%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E9%83%A8%E7%BD%B2%E5%85%A5%E9%97%A8/"/>
      <url>/%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%B7%A5%E5%85%B7/%E5%A4%A7%E6%A8%A1%E5%9E%8B%E4%B8%8E%E5%A4%9A%E6%A8%A1%E6%80%81/202408%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E9%83%A8%E7%BD%B2%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="推理部署综述"><a href="#推理部署综述" class="headerlink" title="推理部署综述"></a>推理部署综述</h1><p>模型部署的步骤：</p><ol><li>训练一个深度学习模型；</li><li>使用不同的推理框架对模型进行推理转换；</li><li>在应用平台运行转换好的模型。</li></ol><p><strong>实际应用场景往往需要模型速度与精度能达到一个较好的平衡。因此这就需要在算法（剪枝，压缩等）与底层（手写加速算作）去优化模型。</strong></p><h1 id="模型格式介绍"><a href="#模型格式介绍" class="headerlink" title="模型格式介绍"></a>模型格式介绍</h1><ol><li>PyTorch (.pth&#x2F;.pt): 这种格式是PyTorch的原生格式，主要用于保存和加载PyTorch模型。</li><li>ONNX (Open Neural Network Exchange): 这是一个开放的模型表示格式，允许在不同的深度学习框架之间交换模型，如PyTorch、TensorFlow、Caffe2等。</li><li>TensorRT (TRT): TensorRT是一个深度学习模型优化器和运行时，主要用于加速模型的推理。TRT格式是为NVIDIA GPU优化的，并且经过了量化、层融合和其他优化。<strong>使用TensorRT优化的模型通常在NVIDIA GPU上有更快的推理速度。这是因为TensorRT会进行很多针对性能的优化。</strong></li></ol><p>通常，你可能首先从PyTorch转换为ONNX，然后从ONNX转换为TensorRT格式，尽管也有直接从PyTorch到TensorRT的工具和方法。</p><h2 id="兼容性"><a href="#兼容性" class="headerlink" title="兼容性"></a>兼容性</h2><ol><li>PyTorch: 由于它是PyTorch的原生格式，所以它与PyTorch高度兼容。</li><li>ONNX: 设计为跨框架的，但<strong>并不是所有的模型和操作都能轻松地转换为ONNX或从ONNX转换</strong>。</li><li>TensorRT: 主要为NVIDIA GPU优化，对于使用不支持的层或操作的模型，可能需要额外的工作来进行转换。</li></ol><h2 id="ONNX"><a href="#ONNX" class="headerlink" title="ONNX"></a>ONNX</h2><p>开放神经网络交换ONNX（Open Neural Network Exchange）是一套表示深度神经网络模型的开放格式，由微软和Facebook于2017推出，然后迅速得到了各大厂商和框架的支持。通过短短几年的发展，<strong>已经成为表示深度学习模型的实际标准，并且通过ONNX-ML，可以支持传统非神经网络机器学习模型，大有一统整个AI模型交换标准</strong>。ONNX定义了一组与环境和平台无关的标准格式，为AI模型的互操作性提供了基础，使AI模型可以在不同框架和环境下交互使用。硬件和软件厂商可以基于ONNX标准优化模型性能，让所有兼容ONNX标准的框架受益，简单来说，ONNX就是模型转换的中间人。</p><h2 id="TensorRT"><a href="#TensorRT" class="headerlink" title="TensorRT"></a>TensorRT</h2><p>NVIDIA TensorRT™ 是用于高性能深度学习推理的 SDK。此 SDK 包含深度学习推理优化器和运行时环境，可为深度学习推理应用提供低延迟和高吞吐量。</p><p>在推理过程中，<strong>基于 TensorRT 的应用程序的执行速度可比 CPU 平台的速度快 40 倍</strong>。借助 TensorRT，您可以优化在所有主要框架中训练的神经网络模型，精确校正低精度，并最终将模型部署到超大规模数据中心、嵌入式或汽车产品平台中。<br>TensorRT 针对多种深度学习推理应用的生产部署提供 INT8 和 FP16 优化，例如视频流式传输、语音识别、推荐和自然语言处理。推理精度降低后可显著减少应用延迟，这恰巧满足了许多实时服务、自动和嵌入式应用的要求。</p><p><strong>模型可以通过onnx格式转换成TensorRT格式后，使用 NVIDIA Triton 推理服务器完成部署</strong></p><h1 id="TensorRT-LLM"><a href="#TensorRT-LLM" class="headerlink" title="TensorRT-LLM"></a>TensorRT-LLM</h1><p>TensorRT-LLM是NV发布的一个推理引擎。llm被编译成TensorRT后与triton服务器一起部署并支持多GPU-多节点推理和FP8。</p><h1 id="LMDeploy"><a href="#LMDeploy" class="headerlink" title="LMDeploy"></a>LMDeploy</h1><p>(<a href="https://github.com/InternLM/lmdeploy">https://github.com/InternLM/lmdeploy</a>)</p><p>LMDeploy 是一个 Python 库，<strong>用于压缩、部署和服务大型语言模型 （LLM） 和视觉语言模型 （VLM）</strong>。 其核心推理引擎包括 TurboMind Engine 和 PyTorch Engine。前者由 C++ 和 CUDA 开发，力求最终优化推理性能，而后者则纯粹使用 Python 开发，旨在为开发人员减少门槛。</p><p>它支持在 Linux 和 Windows 平台上部署 LLM 和 VLM，最低要求 CUDA 版本 11.3。</p><p>LMDeploy允许压缩、部署和服务llm，同时提供高效的推理(持久批处理、阻塞KV缓存、动态分裂和融合、张量并行、高性能CUDA内核)、有效的量化(4位推理性能比FP16高2.4倍)。跨多台机器和GPU部署多模型服务。此外，它还允许分析令牌延迟和吞吐量、请求吞吐量、API服务器和triton推理服务器性能。</p><p>可以很简单的支持server部署，提供类似openai的接口</p><h1 id="VLLM"><a href="#VLLM" class="headerlink" title="VLLM"></a>VLLM</h1><p>vLLM提供LLM推理和服务，<strong>具有SOTA吞吐量，分页注意力，连续批处理，量化(GPTQ, AWQ, FP8)的支持和优化的CUDA内核</strong>。</p><p>支持各种生成式 Transformer 模型。 <a href="https://docs.vllm.ai/en/stable/models/supported_models.html">https://docs.vllm.ai/en/stable/models/supported_models.html</a><br>另外还支持transformer模型的自我定制。 <a href="https://docs.vllm.ai/en/stable/models/adding_model.html">https://docs.vllm.ai/en/stable/models/adding_model.html</a></p><p><strong>暂不支持whisper</strong></p><h2 id="怎么用"><a href="#怎么用" class="headerlink" title="怎么用"></a>怎么用</h2><p>从官方文档上可以看出，支持的事常见的大语言模型和多模态大模型，并不支持传统的Torch模型 <a href="https://lmdeploy.readthedocs.io/en/latest/supported_models/supported_models.html">https://lmdeploy.readthedocs.io/en/latest/supported_models/supported_models.html</a></p><h1 id="Chinese-CLIP"><a href="#Chinese-CLIP" class="headerlink" title="Chinese-CLIP"></a>Chinese-CLIP</h1><p>需求的起源是基于Chinese-CLIP训练的模型。产出是Torch类型的模型，所以最差情况下可以直接Torch.run。同时也<strong>支持将各规模的Pytorch模型，转换为ONNX或TensorRT格式</strong> <a href="https://github.com/OFA-Sys/Chinese-CLIP/blob/master/deployment.md">https://github.com/OFA-Sys/Chinese-CLIP/blob/master/deployment.md</a></p><h1 id="跟进记录归档"><a href="#跟进记录归档" class="headerlink" title="跟进记录归档"></a>跟进记录归档</h1><p>2024-08-27 19:39:16 原因是有几个图像模型需要上线。经过调研有三种方式：</p><ol><li>交付冯亮，以离线任务封装。优势是可以尝试利用spark集群的CPU资源，劣势是仅有的GPU来自AIT，不确定归还时间。所以作为长期跑大量数据无固定交付时间的的候选方案</li><li>在方阳aistudio（2.0）平台上自建空间。需要有组内独占的GPU资源，因为xyz的GPU卡都由彭一平管理，所以不可行</li><li>交付一平手动部署，隐藏与aistudio交互的细节。然后自建调度任务</li></ol><p>不管哪种方案，都需要了解模型的推理部署框架，以便与部署层沟通。</p><p>2024-08-27 19:53:09 看起来vllm和lmdeploy都不太支持语音模型和传统的图像模型，比如whisper</p><p>2024-08-27 19:57:06 AI模型部署落地综述（ONNX&#x2F;NCNN&#x2F;TensorRT） <a href="https://www.jianshu.com/p/4e74a7c1a6f1">https://www.jianshu.com/p/4e74a7c1a6f1</a></p><p>2024-08-27 20:18:05 TODO 一篇就够：高性能推理引擎理论与实践 (TensorRT) <a href="https://developer.aliyun.com/article/995926">https://developer.aliyun.com/article/995926</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术与工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大模型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安卓开发实战</title>
      <link href="/%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%B7%A5%E5%85%B7/%E5%89%8D%E7%AB%AF%E4%B8%8E%E5%B0%8F%E7%A8%8B%E5%BA%8F/202408%E5%AE%89%E5%8D%93%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/"/>
      <url>/%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%B7%A5%E5%85%B7/%E5%89%8D%E7%AB%AF%E4%B8%8E%E5%B0%8F%E7%A8%8B%E5%BA%8F/202408%E5%AE%89%E5%8D%93%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/</url>
      
        <content type="html"><![CDATA[<h1 id="按钮高亮效果研究"><a href="#按钮高亮效果研究" class="headerlink" title="按钮高亮效果研究"></a>按钮高亮效果研究</h1><p>主要需求是在按钮获取焦点时，有一个高亮效果，当然动画效果更好 可能有如下几个方案</p><ol><li>使用简单动画<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Animation</span> <span class="variable">alphaAnimation</span> <span class="operator">=</span> AnimationUtils.loadAnimation(<span class="built_in">this</span>, R.anim.btn_alpha_effect);</span><br></pre></td></tr></table></figure>优势是可以不用setBackground，因为有个按钮有三种状态，所以使用setBackground需要进行复杂的状态控制；可以随时绑定和取消；劣势是只能使用简单动画，比如呼吸灯效果，缩放效果</li></ol><h1 id="使用火山引擎的识别和合成能力"><a href="#使用火山引擎的识别和合成能力" class="headerlink" title="使用火山引擎的识别和合成能力"></a>使用火山引擎的识别和合成能力</h1><p>提供了SDK。<br>ASR <a href="https://www.volcengine.com/docs/6561/113642">https://www.volcengine.com/docs/6561/113642</a><br>TTS <a href="https://www.volcengine.com/docs/6561/79834">https://www.volcengine.com/docs/6561/79834</a></p><p>需要注意的是，ASR时如果选择 <code>RECORDER_TYPE_RECORDER</code>(内置录音机)，就不要再用demo里的SpeechStreamRecorder再自行录音并调用Engine.feedAudio，后者对应于 <code>RECORDER_TYPE_STREAM</code> (外部PCM音频流)。也就是说识别的SDK中，硬件和交互本身就是解耦的</p><p>同样，TTS也可以禁止SDK直接使用系统播放器 <code>PARAMS_KEY_TTS_ENABLE_PLAYER_BOOL</code> ，而是获取到录音数据后自行使用播放器播放</p>]]></content>
      
      
      <categories>
          
          <category> 前端与小程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安卓开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>macbook电脑配置</title>
      <link href="/%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%B7%A5%E5%85%B7/%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/macbook%E7%94%B5%E8%84%91%E9%85%8D%E7%BD%AE/"/>
      <url>/%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%B7%A5%E5%85%B7/%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/macbook%E7%94%B5%E8%84%91%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="Macbook-iOS"><a href="#Macbook-iOS" class="headerlink" title="Macbook(iOS)"></a>Macbook(iOS)</h1><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>2024年06月30日13:42:52 不要企图使用u盘把mac电脑的资料导出。经常会出现错误弹出，导致u盘损坏。更多的通过网络的方式，比如笔记、onedrive、网盘，兜底的情况下使用smb与Windows连接互传，之后再使用u盘</p><h2 id="软件列表备份"><a href="#软件列表备份" class="headerlink" title="软件列表备份"></a>软件列表备份</h2><p>2024年06月06日11:59:34<br>$ ls -hal &#x2F;Applications&#x2F;</p><pre><code>Another Redis Desktop Manager.appAudacity.appBaiduNetdisk.appClashX.appDocker.appDoubao.appEasyConnect.appGoogle Chrome.appHBuilderX.appIntelliJ IDEA CE.appKeePassium.appLark.appMicrosoft Edge.appMySQLWorkbench.appOneDrive.appPhotoScapeX.appPostman.appPyCharm CE.appQQ.appQQMusic.appSafari.appSmart Countdown Timer.appSourcetree.appTencent Lemon Lite.appTencentMeeting.appThunder.appUtilitiesVisual Studio Code - Insiders.appVisual Studio Code.appWeChat.appWireshark.appdraw.io.appiShot.appiTerm.appsogou_mac_615a.appwechatwebdevtools.appwpsoffice.app抖音.app万年历.app企业微信.app有道云笔记.app网易有道翻译.app</code></pre><h2 id="brew"><a href="#brew" class="headerlink" title="brew"></a>brew</h2><p>2024年06月27日08:59:13 首先尽量不要使用homebrew，这是一个第三方的包管理工具，可能随着系统升级遇到奇奇怪怪的问题</p><p>2021年04月05日11:58:28 安装homebrew<br><a href="https://github.com/cunkai/HomebrewCN">https://github.com/cunkai/HomebrewCN</a><br>&#x2F;bin&#x2F;zsh -c “$(curl -fsSL <a href="https://gitee.com/cunkai/HomebrewCN/raw/master/Homebrew.sh">https://gitee.com/cunkai/HomebrewCN/raw/master/Homebrew.sh</a>)”</p><p>(Mac下Homebrew更新国内源brew update卡死)[<a href="https://cloud.tencent.com/developer/article/1817647]">https://cloud.tencent.com/developer/article/1817647]</a><br>export HOMEBREW_NO_INSTALL_FROM_API&#x3D;1</p><p>2024年06月27日09:12:48 如果 Homebrew 遇到问题，可以先尝试执行以下步骤：</p><ol><li>首先，运行 brew doctor 命令查看问题并按照指示进行修复。</li><li>然后，执行 brew update-reset 将 Homebrew 还原到稳定版本。</li><li>最后，运行 brew update 命令来更新软件包。</li></ol><p>2024年06月28日17:10:01 使用brew安装的软件包：brew install ctags tree wget rename ffmpeg graphviz python3 java cmake vim</p><h2 id="node-js"><a href="#node-js" class="headerlink" title="node.js"></a>node.js</h2><p>2024年06月27日09:15:51 卸载旧node环境</p><ol><li><p>brew uninstall node</p></li><li><p>npm uninstall npm -g</p></li><li><p>强制删除残留</p><pre><code> sudo rm -rf /usr/local/lib/node /usr/local/lib/node_modules /var/db/receipts/org.nodejs.*  sudo rm -rf /usr/local/include/node /Users/$USER/.npm  sudo rm /usr/local/bin/node  sudo rm /usr/local/share/man/man1/node.1  sudo rm /usr/local/lib/dtrace/node.d</code></pre></li></ol><p>2024年06月27日09:14:20 使用nvm工具管理node。</p><ol><li>一行命令即可安装node和npm：curl -o- <a href="https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh">https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh</a> | bash</li><li>nvm install node</li></ol><p>2024-07-03 14:51:40 解决国内npm速度慢的问题</p><ol><li>npm config set registry <a href="https://mirrors.cloud.tencent.com/npm">https://mirrors.cloud.tencent.com/npm</a> 切换腾讯云</li><li>npm config set registry <a href="https://registry.npmjs.org/">https://registry.npmjs.org</a> 源站备份</li><li>npm config get registry 验证</li></ol><h2 id="vim"><a href="#vim" class="headerlink" title="vim"></a>vim</h2><p><strong>mac系统自带vim不支持粘贴板</strong>，可以用vim –version 查看到-clipboard。这个时候使用brew install vim –with-lua –with-override-system-vi –with-python3安装第二个vim，不要动受系统监管的vim。然后使用alias将vim设置别名</p><blockquote><p>2024年07月03日14:05:00 mac自带的vim已支持剪切板</p></blockquote><h2 id="zsh"><a href="#zsh" class="headerlink" title="zsh"></a>zsh</h2><p>2024-07-04 11:56:14 sh -c “$(curl -fsSL <a href="https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh">https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh</a>)”</p><p>2024-07-04 11:57:29 git clone –depth 1 <a href="https://github.com/junegunn/fzf.git">https://github.com/junegunn/fzf.git</a> ~&#x2F;.fzf<br>~&#x2F;.fzf&#x2F;install<br>2. </p><h2 id="搜狗输入法"><a href="#搜狗输入法" class="headerlink" title="搜狗输入法"></a>搜狗输入法</h2><p>2024-07-03 14:05:38 设置时间格式。偏好设置&gt;高级&gt;输入扩展&gt; 自定义短语设置</p><blockquote><p>#$year-$month_mm-$day_dd $fullhour:$minute:$second<br>移动端好像做不到</p></blockquote><h2 id="密码本app"><a href="#密码本app" class="headerlink" title="密码本app"></a>密码本app</h2><p>2024年07月01日11:17:34 keepassium。使用onedrive中的文件达成多端自动同步</p><ol><li>应用解锁密码 1****6</li><li>文件锁密码 1****6</li></ol><h2 id="倒计时APP"><a href="#倒计时APP" class="headerlink" title="倒计时APP"></a>倒计时APP</h2><p>2024年06月06日10:32:33 我的需求是可以在状态栏显示剩余时间，并且直接操作启停，到时间有弱提醒</p><ol><li>Onigiri。App Store下载，能很好满足需求，但是过一段时间之后就强制购买</li><li><a href="https://github.com/ivoronin/TomatoBar">https://github.com/ivoronin/TomatoBar</a> 不能随意修改倒计时时间，而只能管理工作时间和间隔</li><li>focus work and study timer。只能使用25分钟的计时器，修改间隔另外收费</li><li>tomito。没有任务栏倒计时。</li><li>Timer Rh。没有任务栏倒计时</li><li>Horo。App Store下载，能很好满足需求，稍微美中不足的是很容易同时开启多个</li><li><strong>Smart CountDown Timer</strong>。App Store下载，能很好满足需求，图标比Horo好看，并且很容易复用同一个时钟</li></ol><h2 id="浏览器选择"><a href="#浏览器选择" class="headerlink" title="浏览器选择"></a>浏览器选择</h2><p>2021年11月22日12:23:25 </p><ol><li>【edge】。<strong>工作使用。标签分组，不活动网页省电，多端同步，极速打开</strong></li><li>【safari】，不跨平台；没有太大毛病，但是标签缩略图不如edge的标题好用；苹果系列的默认浏览器，<strong>手机上的标签可以左右滑动是个亮点</strong>，所以生活中临时使用；</li><li>【360chrome】。not bad。serve me well。360可能存在证书欺诈。没有linux版本。mac比较好用的国产浏览器，跟PC端基本一致，但是grafana已经不支持了。<strong>唯一还支持视频独立窗口播放的浏览器</strong></li><li>firefox。有linux版本，可以轻松同步。缺点：简陋，启动慢，页面渲染bug太多了。没有用武之地了</li><li>chrome：浏览器的代表。但是因为不能登录谷歌所以不能同步书签。只能调试用</li><li>世界之窗：速度超快，超简洁。已经许久不更新，不支持插件，内核版本已逐渐不被支持。360的儿子，不支持固定九宫格。简化版的360，不如说是360极速的前身</li></ol><p>2021年11月11日12:03:55 <strong>浏览器统一使用edge</strong>，分组功能非常好用。不能使用360极速了，已经不支持grafana了</p><p>2024年06月19日11:57:02 EDGE插件：</p><ol><li>smartUp手势</li><li>Web Highlights - PDF &amp; Web Highlighter</li></ol><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><ol><li>vs开发Python不要尝试了，不能自动补全、反应速度超慢、intellisense感知不全经常失误，没有pep8</li><li>eclipse + pydev连提示都没有</li><li><strong>IntelliJ Pycharm Community</strong>。最终选用pycharm 社区版，跨平台，可以商用。天下无双。不用再试其他的了</li><li>在官网下载安装到系统 <a href="https://www.python.org/downloads/macos/">https://www.python.org/downloads/macos/</a></li></ol><p>使用Anaconda管理python版本</p><h2 id="C-C"><a href="#C-C" class="headerlink" title="C&#x2F;C++"></a>C&#x2F;C++</h2><ul><li>visual studio 宇宙最强IDE，Windows下首选。结合远程调试，可以给Linux C++ 提供一种解决方案。</li><li>Visual C++ for Linux 有一个致命问题：项目管理经常崩溃，导致编译时总是找不到文件</li><li>codeblocks在windows下表现与visual C++ 不同，即使调用msvc，也会某些情况下出现编译失败，而且老出前期百怪的问题。。智能提示还好，感知基本没有，语法错误统统不检查；codeblocks只能使用cbp项目文件，不能使用autoconf、make或者cmake的项目文件，而且也没法转换</li><li><strong>现阶段使用vscode+插件可以很好的满足本地和远程开发的情况</strong></li><li>或者eclipse for C++。只能使用gcc编译。而且不是自带gdb。也是一种好的解决方案，但是问题繁多，曲线陡峭<br>CDT的智能感知太弱了，基本不可用的地步</li><li>Clion只支持mingw和cygwin. 只能使用cmake。而且收费</li><li>qt，跨平台C++ IDE。但是对一般性Cpp项目不太友善。qmake毕竟没有cbp通用好懂。没有自带编译环境，需要转接层</li><li>NetBeans和eclipse是基于虚拟机的</li></ul><h3 id="关于vscode"><a href="#关于vscode" class="headerlink" title="关于vscode"></a>关于vscode</h3><p>2018年11月22日09:42:41 配置vscode C++开发环境<br>遇到问题1：只能使用lldb不能使用gdb：<br>问题2：lldb调试不触发断点直接运行结束，可能与这个有关<br>error: No selected frame to use to find the default file.<br>error: No file supplied and no default file available.<br>问题2是因为没有设置编译选项-g</p><h3 id="vscode配置"><a href="#vscode配置" class="headerlink" title="vscode配置"></a>vscode配置</h3><p>2021年10月18日11:08:18 vscode myblog插件配置<br>milkdown<br>Markdown PDF<br>Snazzy Light<br>$ ll &#x2F;Users&#x2F;niuqiang&#x2F;.vscode&#x2F;extensions<br>total 0<br>gera2ld.markmap-vscode-0.0.10<br>loilo.snazzy-light-1.3.0<br>mirone.milkdown-0.0.12<br>yzhang.markdown-all-in-one-3.4.0</p><p>2021年10月18日11:38:11 vscode-insider 插件配置<br>$ ll &#x2F;Users&#x2F;niuqiang&#x2F;.vscode-insiders&#x2F;extensions<br>total 0<br>aaron-bond.better-comments-2.1.0<br>adamhartford.vscode-base64-0.1.0<br>alefragnani.bookmarks-13.2.2<br>alefragnani.project-manager-12.4.0<br>bbenoist.doxygen-1.0.0<br>coenraads.bracket-pair-colorizer-1.0.62<br>cschlosser.doxdocgen-1.3.2<br>eamodio.gitlens-11.7.0<br>foxundermoon.shell-format-7.2.2<br>github.vscode-pull-request-github-0.34.3<br>golang.go-0.30.0<br>golang.go-0.31.0<br>grapecity.gc-excelviewer-4.1.52<br>jeff-hykin.better-cpp-syntax-1.15.10<br>jeff-hykin.better-cpp-syntax-1.15.11<br>mohsen1.prettify-json-0.0.3<br>ms-vscode-remote.remote-containers-0.215.0<br>ms-vscode-remote.remote-containers-0.216.0<br>ms-vscode-remote.remote-ssh-0.70.0<br>ms-vscode-remote.remote-ssh-edit-0.70.0<br>ms-vscode-remote.remote-wsl-0.64.2<br>ms-vscode.cmake-tools-1.9.2<br>ms-vscode.cpptools-1.8.0<br>ms-vscode.cpptools-1.8.3<br>ms-vscode.cpptools-extension-pack-1.1.0<br>ms-vscode.cpptools-themes-1.0.0<br>ms-vsliveshare.vsliveshare-1.0.5273<br>ms-vsliveshare.vsliveshare-1.0.5330<br>ms-vsliveshare.vsliveshare-audio-0.1.91<br>msyrus.go-doc-1.0.1<br>teabyii.ayu-1.0.5<br>twxs.cmake-0.0.17<br>xaver.clang-format-1.9.0</p><h3 id="关于-xcode"><a href="#关于-xcode" class="headerlink" title="关于 xcode"></a>关于 xcode</h3><p>2018年11月25日15:08:27<br>xcode一样需要有专门的工程文件xcodeproject。使用Makefile的原理同vscode，也是调用外部构建工具。但是xcode自身不带有命令行工具<br>clion和pycharm都太占内存CPU了，如非必要尽量不用jetbrains<br>codeblocks可以认为没有mac版本</p><p>2018年12月05日21:57:13  尝试使用xcode管理makefile组织的代码</p><h2 id="java"><a href="#java" class="headerlink" title="java"></a>java</h2><p>类似nvm之于nodejs，java同样有版本工具<a href="https://sdkman.io/">sdkman</a></p><blockquote><p>SDKMAN是一个用于管理软件开发工具的工具。它允许用户在他们的计算机上安装、管理和切换不同的软件开发工具，如Java、Gradle、Maven、Scala等。SDKMAN提供了一个简单易用的命令行界面，用户可以使用命令来安装、卸载、切换和更新不同的工具版本。SDKMAN还提供了一个广泛的软件工具列表，用户可以从中选择并安装他们所需的工具。<br>简单来说，如果你使用过python的anaconda，那么你可以将这玩意理解成一个java版本的anaconda，可以很方便的管理多个java版本。</p></blockquote><ol><li>所以没有必要再手动下载安装任何java（除了brew可能依赖的版本）</li><li>所以也不必再使用IDEA内置的SDK下载器了</li></ol><p>2024-08-21 10:20:21 截止目前IDE还是使用IntelliJ IDEA最全面靠谱。<a href="../resources/jetbrains_idea.zip">配置文件</a></p><h2 id="go"><a href="#go" class="headerlink" title="go"></a>go</h2><ul><li>IntelliJ gogland。但是收费</li><li>现阶段先使用vscode，因为现在写Golang也不多</li></ul><h2 id="编辑器"><a href="#编辑器" class="headerlink" title="编辑器"></a>编辑器</h2><p>首先要区分编辑器与IDE</p><ul><li><strong>visualstudiocode</strong>漂亮、启动速度慢。既是编辑器又是IDE。转码最强。不对C&#x2F;C++做语法分析</li><li>jetbrains fleet。对标visualstudiocode的插件式ide，同样有jb家软件高内存的毛病，而且对调试测试的支持还不完善。2024年05月11日</li><li>Atom：启动超级慢，不会自动转码。放弃。超级傻逼的编辑器</li><li>notepad++启动超级快，会自动转码，丑。插件辣鸡。不能跨平台</li><li>Sublime 命令插件自有体系，需要学习成本。跨平台，会自动转码。会对C&#x2F;C++做语法分析，能跳转</li><li>lighttable既不是编辑器又不是IDE的辣鸡。<blockquote><p>编辑器全面转向VSCode，自带功能加插件完爆sublime，而且最漂亮。其他更不在话下。但是真的是太慢了，而且对后端语言的支持比sublime差远了</p></blockquote></li><li>vim不值得深入学习，彻底完全放弃，不要有一丝疑虑。只需要尽量使用spf-13m插件或者simple.vimrc</li></ul><p>现在编辑器的唯一和最终解决方案已经锁死vscode了</p><h3 id="关于sublime"><a href="#关于sublime" class="headerlink" title="关于sublime"></a>关于sublime</h3><p>丰富的插件、漂亮、专业、快捷、高度定制、编辑器的最后解决方案 首先通过注册表把它加到右键菜单 [HKEY_CLASSES_ROOT*\shell\SublimeText3] @&#x3D;”用 SublimeText3 打开” “Icon”&#x3D;”C:\Program Files\Sublime Text 3\sublime_text.exe,0”<br>[HKEY_CLASSES_ROOT*\shell\SublimeText3\command]<br>@&#x3D;”C:\Program Files\Sublime Text 3\sublime_text.exe %1”</p><p>[HKEY_CLASSES_ROOT\Directory\shell\SublimeText3]<br>@&#x3D;”用 SublimeText3 打开”<br>“Icon”&#x3D;”C:\Program Files\Sublime Text 3\sublime_text.exe,0”</p><p>[HKEY_CLASSES_ROOT\Directory\shell\SublimeText3\command]<br>@&#x3D;”C:\Program Files\Sublime Text 3\sublime_text.exe %1”</p><p>sublime插件与设置：<br>2018年1月18日11:03:38 prettyjson<br>converttoutf8<br>log highlight</p><p>2018年11月22日11:27:01 sublime要去中文官网下载，外文官网翻墙都打不开</p><h2 id="其他配置文件"><a href="#其他配置文件" class="headerlink" title="其他配置文件"></a>其他配置文件</h2><p>2019年10月28日14:16:54 导出spacevim配置</p><pre><code>原位置：~/.SpaceVim.d/init.toml文件名：spacevim.init.toml使用方式：内容复制，保存即可2023年04月16日10:21:41 仅复制vimrc即可，spacevim安装耗时，也没有太大必要</code></pre><p>2019年10月28日14:37:28 导出iterm2配置</p><pre><code>原位置：iTerm2 -&gt; Preferences -&gt; General -&gt; Settings -&gt; Export All Settings and Data文件名：iTerm2Settings.itermexport使用方式：iTerm2 -&gt; Preferences -&gt; General -&gt; Settings -&gt; Import All Settings and Data</code></pre><p>bash</p><pre><code>工作机：develop.zshrc跳板机：jump.bashrc编译测试机：compile.bashrciTerm2配置：iTerm2_Profiles.json</code></pre><p>vscode</p><pre><code>快捷键：vscodekeybindings.json  笔记设置：vscodesettings.json代码设置：vscodesettings2.jsonC++新文件模版配置：vscodetmpl.json  通过preference-&gt; Configure User Sniffets生效</code></pre><p>IDE</p><pre><code>Clion: clion-light.zipGoland: goland-light.zipPycharm: pycharm-light.zip</code></pre><h2 id="其他适配"><a href="#其他适配" class="headerlink" title="其他适配"></a>其他适配</h2><p>2021年03月03日23:09:39 解决macos更新big sur之后，vscode + source code pro显示全黑色的问题</p><ol><li>rm -rf &#x2F;Users&#x2F;didi&#x2F;Library&#x2F;Application\ Support&#x2F;Code\ -\ Insiders</li><li>移除source code pro字体，移除vscode</li><li>安装vscode，安装字体。配置字体</li></ol><p>2020年11月03日10:44:58 安全性与隐私-&gt;启用<strong>文件保险箱</strong><br>C3CO-OT24-OHVJ-TZMX-7P9J-OJGL</p><p>2020年09月16日18:03:11 <strong>ocenaudio</strong>有问题，偶尔会持续失真，表现类似打开错误的采样率，但是实际没错</p><p>2019年08月22日17:38:04 mac中按住control + 方向键上打开任务视图</p><p>2021年04月06日20:11:58 <strong>iterm2无法缩放</strong>，无法拖动<br>Preferences-&gt;Appearance-&gt;Tabs-&gt;勾选 show tab bar even when there is only one tab<br>终端使用iTerm2，选择主题为zenburn，spf13-vim同样。原来vim展示什么样不止取决于主题，也取决于终端主题</p><p>2021年04月12日20:23:23 配置rzsz传递文件<br><a href="https://www.cnblogs.com/limingluzhu/p/4818197.html">https://www.cnblogs.com/limingluzhu/p/4818197.html</a></p><p>2024年05月06日19:33:39 <strong>SourceTree</strong> macbook上 git可视化首选</p><ol><li>GitHubDesktop辣鸡。反应慢，功能少</li></ol><p>2023年04月17日11:29:44 <strong>配置休眠时关闭蓝牙和wifi</strong><br><a href="https://juejin.cn/post/7057723273827581959">https://juejin.cn/post/7057723273827581959</a><br><a href="https://github.com/Mintimate/SleepAndAutoBluetoothAndWifi">https://github.com/Mintimate/SleepAndAutoBluetoothAndWifi</a></p><p>2021年04月07日10:22:08 <strong>cherry mx 1.0 键盘 &amp; thinkplus M80 鼠标</strong></p><h2 id="蓝牙"><a href="#蓝牙" class="headerlink" title="蓝牙"></a>蓝牙</h2><p>2024-07-19 15:18:19 合盖休眠时自动关闭蓝牙，避免耳机自动连接合盖的电脑<br><a href="https://github.com/odlp/bluesnooze">https://github.com/odlp/bluesnooze</a></p><h1 id="Linux-Ubuntu-CentOS"><a href="#Linux-Ubuntu-CentOS" class="headerlink" title="Linux(Ubuntu&#x2F;CentOS)"></a>Linux(Ubuntu&#x2F;CentOS)</h1><p>ubuntu是最适合作为桌面操作系统的linux，但是服务端常用的是centos<br>Ubuntu和centos以及其他Linux发行版，他们的唯一区别在于包管理方式不同，使用的内核都是linus工作组在维护的内核，区别在于通常Ubuntu的内核版本比较高，而centos的内核版本比较低。Ubuntu 16.04&#x3D;3.8.0，centos7（1611build）&#x3D;3.1.0</p><p>ubuntu:<br>好吧，第一次更新系统后提示出现错误只能重启，重启后无限卡在登录页面也桌面环境之间。遂放弃</p><p>最终选用CentOS 7 Everything，其他版本不再考虑</p><pre><code>安装时选择安装设备，具体请搜索选择everything镜像，直接用UltraISO制作(不要用ultraiso preuim)，不要用UUI会有格式转换。选择安装develop station安装。此时请使用模拟声卡的声音接口内置了中文输入法、播放器等尽量尝试使用应用商店。应用商店其实就是yum源的可视化方式使用pkgs.org提供的rpm安装chrome，此后可以在网页使用云端工具了配置yum源，最少要有epel、rpmforgeyum upgrade ，升级系统</code></pre><h1 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h1><h2 id="自动关机"><a href="#自动关机" class="headerlink" title="自动关机"></a>自动关机</h2><p>@echo off<br>sc config Schedule start&#x3D;AUTO&gt;nul 2&gt;nul<br>net start Schedule<br>at 21:00 &#x2F;every:M,T,W,Th,F,S,Su cmd &#x2F;c Start %systemroot%\system32\shutdown.exe &#x2F;s &#x2F;f<br>at 22:00 &#x2F;every:M,T,W,Th,F,S,Su cmd &#x2F;c Start %systemroot%\system32\shutdown.exe &#x2F;s &#x2F;f<br>at 23:00 &#x2F;every:M,T,W,Th,F,S,Su cmd &#x2F;c Start %systemroot%\system32\shutdown.exe &#x2F;s &#x2F;f<br>windows 添加自动关机任务，最终的唯一的方式</p><h2 id="VMWare"><a href="#VMWare" class="headerlink" title="VMWare"></a>VMWare</h2><p>需求：模拟服务的发布，达到可以在不同主机的情况下访问。 解决方案：1.把服务用Windows系统发布 2.在虚拟机中同时运行多个虚拟主机，并组成不同网络 考虑到以后可能需要把Kubernetes等分布式应用工具先部署到测试环境，所以这里采用了2。 虚拟机三种组网方式 注意到：桥接方式可以认为虚拟出一台物理机在子网上，所以不能用于MAC绑定的子网（公司就是mac绑定的）；NAT方式可以实现主机虚拟机双向通信，但是虚拟机之间不能通信。那就只能用主机发布，相当于方案1.所以只能使用主机模式。 主机模式主机也有一块虚拟网卡，和虚拟机的网卡一起连接在虚拟交换机上组成子网。但是这个子网是绝缘的，只能与主机上的其他虚拟子网相连。<br>在VMware workstation Pro 12上，以下步骤应该能解决问题。如果不能，请直接移步VMware文档中心不用百度了<br>步骤：<br>1.右键需要组网的虚拟机，在配置》网络适配器中选择主机模式。然后在主机中使用配置有线网也好、命令行也好，保证ip变到主机模式的网段！！！（三种模式的网段在 编辑》虚拟网络编辑器 里可以看到）<br>2.在主机上控制面板里，配置VMnet1可共享，并且共享给VMnet8（为什么是这个虚拟网卡我也不知道，当时瞎选的）<br>3.这个时候如果虚拟机里的ipv4是DHCP自动，应该就可以了。反正最终效果是主机、虚拟机*n在同一子网中！<br>4.这时应该是能相互ping通了。在某个虚拟机中把服务发布，然后在其他机器访问试试？是不是会出现no route to host ？ 这是因为作为服务器的虚拟机的防火墙拒绝访问。centos7的防火墙服务是firewalld.service。<br>5.如果服务写的对，而且发布没有问题的话，这个时候就能正常访问了。<br>6.需要的时候逆向以上1、2，不然虚拟机不能上网。</p><h2 id="windows其他适配"><a href="#windows其他适配" class="headerlink" title="windows其他适配"></a>windows其他适配</h2><p>2018年1月16日09:53:52 如果安装了Visual Studio，务必修改注册表，在右键菜单里删除打开方式</p><p>2018年1月16日09:53:54 Win7版本，安装MacType，并且选用LCD。pycharm对于LCD和non-LCD屏的支持不同，如果不支持LCD，那么就会出现显示字符被截断的问题</p><p>2018年1月16日09:53:57 安装vsix.双击打开。卸载呢？在visualstudio里 工具》扩展与更新》已安装》选择该项》卸载</p><p>2018年1月16日09:54:33 添加任务计划。开始》程序》附件》系统工具》任务计划<br>2018年1月16日09:55:04 输出目录下所有文件目录树。tree loveit &#x2F;f &gt;&gt; output.txt</p><p>2018年1月16日09:55:17 Windows 查看命令手册。help 命令</p><p>2018年1月16日09:55:28 启动MySQL。作为系统服务需要在计算机》管理》服务和应用程序》服务 中开启，其他系统服务也是</p><p>2018年1月16日09:55:53 在浏览器中禁用stackoverflow的js可以明显加快速度</p><p>2018年1月16日09:55:56 禁用百度知道的js就可以避免日报的侵扰</p><p>2018年1月16日09:55:58 PowerShell中获取本机已安装软件列表 Get-WmiObject -Class Win32_Product</p><p>2018年1月16日09:56:03 添加和删除右键菜单<br>控制文件右键菜单的注册表项在HKEY_CLASSES_ROOT*\shell\ 。 注意添加command文件夹<br>控制文件夹右键菜单的注册表项在HKEY_CLASSES_ROOT\Directory\shell\ 。 注意添加command文件夹</p><p>2018年1月11日15:45:25 废止使用Visual Studio 2017作为Linux C++开发工具，目前尚不稳定</p><p>2018年1月16日10:05:27 <install> PicPick</p><p>2018年1月16日14:13:25 <install> [depracated]搜狗鼠标手势</p><p>2018年1月16日10:07:39 linux虚拟机跟windows主机之间拷贝东西就可能引起文件数据异常，典型的如压缩文件损坏，更好的方式是使用xshell的rz与sz命令</p><p>2018年1月18日15:25:48 安装tortoiseSVN和tortoiseGit时务必勾选命令行</p><p>2024年05月06日19:34:09 TortoiseGitgit可视化首选</p><p>reStructText富文本标记语言<br>使用终极编辑器Visualstudio。其他编辑器都不能完美展示reStructText<br>Markdown 过于简单了<br>ESET<br>JJmatch公司自带的杀毒软件。默认在用户登录时进行全盘扫描，极占CPU，甚至导致开机卡机。需要在ESET面板&gt;工具&gt;计划任务修改该项<br>Navicat 确实没有mysqlworkbench好使</p><p>远程调试通常是通过ftp或samba或git把源码同步到目标机，然后借助gdb远程调试技术，使用gdbserver调试，支持的ide有clion、vs、eclipse。但是这条路没有必要深入，只需要走通即可。可以在虚拟机中开发，然后在目标机上测试运行。如果需要，使用上述方式调试。所有对远程开发并调试的尝试就此打住。<br>绝不尝试vim开发+gdb原生调试<br>Foxmail 不能导出，所有东西都不能导出。不能同步<br>Dreammail 非常强大。可以备份<br>网易邮箱大师 功能太弱了。可以同步</p><h2 id="查看端口占用"><a href="#查看端口占用" class="headerlink" title="查看端口占用"></a>查看端口占用</h2><p>2018年4月19日11:00:42</p><p>打开cmd命令行或PowerShell</p><p>查看端口占用情况</p><p>netstat -aon|findstr port</p><p>最后一列是pid</p><p>查看pid对应的进程详细情况</p><p>tasklist|findstr pid</p><p>同时得到进程映像名</p><p>根据pid或进程影响名杀死进程</p><p>taskkill &#x2F;f &#x2F;t &#x2F;im pid或程序名</p><p>&#x2F;im选项可能要改为&#x2F;pid选项</p><h2 id="软件及配置"><a href="#软件及配置" class="headerlink" title="软件及配置"></a>软件及配置</h2><p>2018年3月16日14:06:30 PDF桌面阅读使用福昕阅读器。注意首先在设置中将广告推送取消，然后在视图-页面设置中选择&lt;连续&gt;</p><p>2018年3月30日09:56:27 调整visual studio 配置以配色</p><blockquote><p>不再使用visual assist X</p></blockquote><p>2018年4月3日11:16:27 实现Windows CMD复制粘贴功能：</p><blockquote><p>Windows 命令行默认是不能选定的</p><ul><li>首先在窗口右键，选择编辑-&gt;标记</li><li>标记完成后回车确认</li><li>此时内容已在剪贴板。右键窗口选择粘贴</li></ul><p>在任何情况下都不能实现直接通过ctrl+cv复制粘贴</p></blockquote><p>2018年4月18日17:24:50 勾选cmd命令行的快速编辑模式和插入模式，可以实现选择之后右键快速复制，再右键快速粘贴</p><p>2018年4月3日17:39:21 使用clion三部曲：</p><blockquote><ul><li>配置toolchains。在settings&gt;Build,Execution,Deployment中配置Toolchains。注意如果是拷贝的配置，配置export时将toolchains清空，否则会导致导入时不能更改</li><li>配置Cmake。在settings&gt;Build,Execution,Deployment中配置cmake profiles</li><li>配置run configuration。如果前两部能正常完成，在打开了工程的情况下，第三步可自动完成。</li></ul></blockquote><p>2018年5月30日16:23:58 发现Clion的编译提示和变量类型、值提示没有VS完整</p><p>2018年8月3日15:34:54 windows上的mysql无法区分大小写！尽可能直接使用linux mysql</p><p>2019年12月23日19:06:00 按住option键，然后从窗口的下边缘开始缩放，这样上边缘也会同步缩放，以解决filezilla初始化窗口无法显示的问题</p><p>2020年02月24日10:11:41 破解beyondcompare作为文本对比工具</p><h1 id="跳板机"><a href="#跳板机" class="headerlink" title="跳板机"></a>跳板机</h1><p>2019年04月15日18:31:00 跳板机上的脚本都是sh脚本，使用个人登录凭证逐个登录到各机器<br>~&#x2F;lighttpdfinder 找到哪个集群的lighttpd在为某个端口转发<br>~&#x2F;logfilter 日志过滤器</p><p>2019年05月14日14:20:47 .bashrc<br>快速进入测试机</p><hr><h1 id="跟进记录归档"><a href="#跟进记录归档" class="headerlink" title="跟进记录归档"></a>跟进记录归档</h1><p>2024-08-22 11:02:49 很久以前还考虑过如何用Windows主机做开发机，选用什么系统，配置什么环境，现在基本上 macbook + docker + （vscode）统一天下了</p><h2 id="开发机"><a href="#开发机" class="headerlink" title="开发机"></a>开发机</h2><ul><li>Windows所见即所得确实厉害，软件丰富，优化不错，但是只能远程测试C++</li><li>Linux常作为服务端系统。但是不太友好<br>  因此除C++外其余在Windows。仅保留LInux Ultimate虚拟机和实验性真机<blockquote><p>最终选用 centos7 workstation版本，可定制化程度高，界面支持好，管理方便，大部分软件包都默认安装。Ubuntu根本不堪一击<br>2018年11月11日15:31:44 Ubuntu on Windows目前还漏洞百出，安装c++工具链遇到各种奇怪的问题无法解决</p></blockquote></li></ul><h3 id="centos"><a href="#centos" class="headerlink" title="centos"></a>centos</h3><p>2020年12月09日14:14:16 源码安装</p><ol><li><p>vim8.1:</p><p>  .&#x2F;configure –with-features&#x3D;huge –enable-multibyte –enable-rubyinterp –enable-pythoninterp –with-python-config-dir&#x3D;&#x2F;usr&#x2F;lib64&#x2F;python3.4&#x2F;config –enable-luainterp –with-lua-prefix&#x3D;&#x2F;usr&#x2F;bin –enable-perlinterp –enable-gui&#x3D;gtk2 –enable-cscope –prefix&#x3D;&#x2F;home&#x2F;niuqiang&#x2F;vim81</p></li><li><p>cgdb</p></li><li><p>cmake</p></li><li><p>ffmpeg-static</p></li></ol><p>2020年12月10日11:15:20 源码安装python、golang<br>2020年01月06日23:24:36 源码安装python无法安装依赖的问题however the ssl module in Python is not available.</p><pre><code>    yum install openssl-devel    cd Python-3.6.2    ./configure    make altinstall</code></pre>]]></content>
      
      
      <categories>
          
          <category> 方法与工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> macbook </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly主题快速入门</title>
      <link href="/butterfly_quick_start/"/>
      <url>/butterfly_quick_start/</url>
      
        <content type="html"><![CDATA[<h1 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br><span class="line"></span><br><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><h1 id="Configure"><a href="#Configure" class="headerlink" title="Configure"></a>Configure</h1><p>修改主站配置：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">theme: butterfly</span><br></pre></td></tr></table></figure><p>拷贝主题配置：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cp -r themes/butterfly/_config.yml ./_config.butterfly.yml</span><br></pre></td></tr></table></figure><p>Hexo会自动合并主题中的_config.yml和 _config.butterfly.yml ，如果存在同名配置，会优先使用_config.butterfly.yml的配置</p><h1 id="美化"><a href="#美化" class="headerlink" title="美化"></a>美化</h1><p>2024-08-15 11:28:12 butterfly主题设置参考：<a href="https://blog.csdn.net/mjh1667002013/article/details/129290903">https://blog.csdn.net/mjh1667002013/article/details/129290903</a></p><blockquote><p>主要是修改主题配置，需要配合安装npm包</p></blockquote><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br><span class="line">npm install hexo-lazyload-image --save</span><br><span class="line">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure><h1 id="下一步工作"><a href="#下一步工作" class="headerlink" title="下一步工作"></a>下一步工作</h1><p>2024-08-15 11:28:22 魔改与美化未配置</p>]]></content>
      
      
      <categories>
          
          <category> 方法与工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo快速入门</title>
      <link href="/hexo_quick_start/"/>
      <url>/hexo_quick_start/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Install-Hexo"><a href="#Install-Hexo" class="headerlink" title="Install Hexo"></a>Install Hexo</h3><p>首先自行安装nvm、node.js、npm工具</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br><span class="line">hexo -v  </span><br></pre></td></tr></table></figure><h3 id="Initialize-Book"><a href="#Initialize-Book" class="headerlink" title="Initialize Book"></a>Initialize Book</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p iBook &amp;&amp; <span class="built_in">cd</span> iBook</span><br><span class="line">hexo init</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo server -o</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Initialize-Github-Pages"><a href="#Initialize-Github-Pages" class="headerlink" title="Initialize Github Pages"></a>Initialize Github Pages</h3><p>创建一个名为{用户名}.github.io的仓库</p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><p>首先把通过git工具把生成的静态页面推送到github的流程，配置到站点配置文件；安装deployer</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 方法与工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>graalvm+spring3快速入门</title>
      <link href="/%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%B7%A5%E5%85%B7/%E5%88%86%E5%B8%83%E5%BC%8F%E6%9C%8D%E5%8A%A1/graalvm+spring3_quick_start/"/>
      <url>/%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%B7%A5%E5%85%B7/%E5%88%86%E5%B8%83%E5%BC%8F%E6%9C%8D%E5%8A%A1/graalvm+spring3_quick_start/</url>
      
        <content type="html"><![CDATA[<p>2024-08-21 15:06:17 TODO 在读完</p><ol><li>Spring揭秘2023-02-23</li><li>深入理解Java虚拟机（第3版）2023-02-17</li></ol><p>之后，使用graalvm和spring3升级在使用的spring框架。</p><h1 id="快速试用"><a href="#快速试用" class="headerlink" title="快速试用"></a>快速试用</h1><ol><li>spring初始化 <a href="https://start.spring.io/">https://start.spring.io/</a></li><li><img src="/graalvm+spring3_quick_start/spring3_initializr.png" alt="选项"></li><li>项目初始化完成后，根目录会出现一个HELP.md文件对构建过程做简单指引，备份到 <a href="graalvm+spring3_quick_start/HELP">HELP.md</a></li><li>使用idea调通demo，可以直接启动，与其他spring应用没有区别</li><li>help.md里有介绍，额外两种构建方式<ol><li><code>./mvnw native:compile -Pnative</code> 生成本地可执行程序</li><li><code>./mvnw spring-boot:build-image -Pnative</code> 生成镜像。但是没有调试成功，暂时先放这</li></ol></li></ol><h1 id="制作镜像"><a href="#制作镜像" class="headerlink" title="制作镜像"></a>制作镜像</h1><p>graalvm原生支持的 build pack有点奇怪。在生产部署的时候，怎么能保证有可以用来执行构建命令的环境呢，所以需要在docker中执行，那么问题来了，既然在docker环境中，又怎么产出另一个docker呢？所以这个功能适用于直接推送镜像的场景，而这种操作正是需要避免的，所以更实用的还是生成本地可执行或者jar</p><p>回到贝壳，使用dockerfile构建支持，需要从dockerfile开始从零构建</p><h1 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h1><ol><li>使用最新的ubuntu:24.04，升级的目的就是技术上不要落后，所以当然也要使用最新的lts了。这里不使用centos，因为包管理太落后了</li><li>更新apt到国内源遇到问题，出现不适配的问题。推测是版本太新了，国内支持比较弱，所以暂时没有更换国内源</li><li>设置 DEBIAN_FRONTEND&#x3D;noninteractive的作用是避免apt-get命令执行时，个别依赖包要求的交互</li><li>安装java环境的时候不要使用sdkman，下载网速非常慢，几乎不可行。所以使用直接下载jdk的方式<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Installing script cli archive...</span><br><span class="line">* Downloading...</span><br><span class="line">curl: (56) Failure when receiving data from the peer</span><br><span class="line"></span><br><span class="line">&#x27;curl --fail --location --progress-bar &quot;$&#123;SDKMAN_SERVICE&#125;/broker/download/sdkman/install/$&#123;SDKMAN_VERSION&#125;/$&#123;SDKMAN_PLATFORM&#125;&quot; &gt; &quot;$sdkman_zip_file&quot;&#x27;: command failed with exit code 56.</span><br><span class="line">The command &#x27;/bin/sh -c curl -s &quot;https://get.sdkman.io&quot; | bash&#x27; returned a non-zero code: 56</span><br></pre></td></tr></table></figure></li><li>基础镜像构建完成后上传到harbor.intra.ke.com&#x2F;speech&#x2F;base。因为云平台构建可以依赖到harbor，但是直接使用ubuntu:24.04就会报超时错误<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2024-08-23 16:48:11   #3 [internal] load metadata for docker.io/library/ubuntu:latest</span><br><span class="line">2024-08-23 16:48:11   #3 sha256:8c6bdfb121a69744f11ffa1fedfc68ec20085c2dcce567aac97a3ff72e53502d</span><br><span class="line">2024-08-23 16:48:49   #3 ERROR: failed to copy: httpReadSeeker: failed open: failed to do request: Get &quot;https://production.cloudflare.docker.com/registry-v2/docker/registry/v2/blobs/sha256/ed/edbfe74c41f8a3501ce542e137cf28ea04dd03e6df8c9d66519b6ad761c2598a/data?verify=1724405893-6d9Q6dfHh0eXukAhn06q1Pstn38%3D&quot;: dial tcp 31.13.90.19:443: i/o timeout</span><br><span class="line">2024-08-23 16:48:49   ------</span><br><span class="line">2024-08-23 16:48:49    &gt; [internal] load metadata for docker.io/library/ubuntu:latest:</span><br><span class="line">2024-08-23 16:48:49   ------</span><br><span class="line">2024-08-23 16:48:49   ubuntu:latest: failed to copy: httpReadSeeker: failed open: failed to do request: Get &quot;https://production.cloudflare.docker.com/registry-v2/docker/registry/v2/blobs/sha256/ed/edbfe74c41f8a3501ce542e137cf28ea04dd03e6df8c9d66519b6ad761c2598a/data?verify=1724405893-6d9Q6dfHh0eXukAhn06q1Pstn38%3D&quot;: dial tcp 31.13.90.19:443: i/o timeout</span><br></pre></td></tr></table></figure></li><li>提前创建日志目录&#x2F;data0&#x2F;www&#x2F;logs，线上日志采集会用，不创建启动前会crash</li><li>构建模块不再使用容器内下载代码的方式了，而是直接拷贝，避免不一致</li><li>现在的构建还是使用maven打包成jar，打包native image的方式暂时没有时间验证，等以后有时间吧</li><li>目前以这种方式终于算是阶段性完成了通路，待上线验证</li></ol><h2 id="官方镜像"><a href="#官方镜像" class="headerlink" title="官方镜像"></a>官方镜像</h2><p>2024-08-23 14:09:52 注意graalvm官方提供了打包好对应版本graalvm的镜像，可以直接依赖。但是问题是基础镜像是Oracle Linux Server，很可能是slim版本，没有包管理工具，也就是说完全没有可控性可言，所以尽量不要使用</p><blockquote><p>docker run -idt –name graalvm21 –entrypoint &#x2F;bin&#x2F;bash ghcr.io&#x2F;graalvm&#x2F;native-image-community:21</p></blockquote><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">bash-5.1# cat /etc/os-release</span><br><span class="line">NAME=&quot;Oracle Linux Server&quot;</span><br><span class="line">VERSION=&quot;9.3&quot;</span><br><span class="line">ID=&quot;ol&quot;</span><br><span class="line">ID_LIKE=&quot;fedora&quot;</span><br><span class="line">VARIANT=&quot;Server&quot;</span><br><span class="line">VARIANT_ID=&quot;server&quot;</span><br><span class="line">VERSION_ID=&quot;9.3&quot;</span><br><span class="line">PLATFORM_ID=&quot;platform:el9&quot;</span><br><span class="line">PRETTY_NAME=&quot;Oracle Linux Server 9.3&quot;</span><br></pre></td></tr></table></figure><h2 id="Macbook"><a href="#Macbook" class="headerlink" title="Macbook"></a>Macbook</h2><p>2024-08-23 16:03:59 不要尝试在MacBook上构建镜像，会遇到各种各样奇奇怪怪的问题！，比如国内镜像源没有同步arm系列的依赖包</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">E: Failed to fetch http://mirrors.ustc.edu.cn/ubuntu/dists/noble/main/binary-arm64/Packages  404  Not Found [IP: 202.141.160.110 80]</span><br></pre></td></tr></table></figure><h1 id="构建启动"><a href="#构建启动" class="headerlink" title="构建启动"></a>构建启动</h1><p>构建过程同java8</p><ol><li>.&#x2F;mvnw -U clean package -Dmaven.test.skip&#x3D;true # 用于构建传统jar包模式</li><li>使用传统方式启动： java -jar xxx.jar</li></ol><p>方案2：</p><ol><li>.&#x2F;mvnw native:compile -Pnative # 用于构建native镜像</li><li>.&#x2F;target&#x2F;interact-universal-graalvm21 –gc&#x3D;G1 –pgo –strict-image-heap -march&#x3D;native -Dspring.profiles.active&#x3D;test<br>native image的方式同样支持-D等传入参数，需要重新整理start.sh</li></ol><h1 id="移植"><a href="#移植" class="headerlink" title="移植"></a>移植</h1><ol><li>首先在云平台创建环境</li><li>尝试直接把java8项目直接升级pom、maven、java版本，但是遇到各种奇奇怪怪的问题遥遥无期，所以最好还是反向迁移</li><li>先把graalvm21版本在云平台跑起来</li></ol>]]></content>
      
      
      <categories>
          
          <category> 方法与工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用环境管理工具</title>
      <link href="/%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%B7%A5%E5%85%B7/%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/%E4%BD%BF%E7%94%A8%E7%8E%AF%E5%A2%83%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/"/>
      <url>/%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%B7%A5%E5%85%B7/%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/%E4%BD%BF%E7%94%A8%E7%8E%AF%E5%A2%83%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<h1 id="Anaconda"><a href="#Anaconda" class="headerlink" title="Anaconda"></a>Anaconda</h1><p>Anaconda是一个用于科学计算的Python发行版，Anaconda支持 Linux, Mac, Windows系统，提供了包管理与环境管理的功能，可以很方便地解决多版本python并存、切换以及各种第三方包安装问题。</p><p>Anaconda利用工具&#x2F;命令conda来进行package和environment的管理，并且已经包含了Python和相关的配套工具。在这里解释下conda、anaconda这些概念的差别：Anaconda则是一个打包的集合，里面预装好了conda、某个版本的python、众多packages、科学计算工具等等，所以也称为Python的一种发行版。</p><p>conda可以理解为一个工具，也是一个可执行命令，其核心功能是包管理与环境管理。包管理与pip的使用类似，环境管理则允许用户方便地安装不同版本的python并可以快速切换。</p><p>其实还有Miniconda，顾名思义，它只包含最基本的内容——python与conda，以及相关的必须依赖项，对于空间要求严格的用户，Miniconda是一种选择。Anaconda和Python的区别是：<br>1、安装包大小不同python自身缺少numpy、matplotlib、scipy、scikit-learn等一系列包，需要安装pip来导入这些包才能进行相应运算。Anaconda(开源的Python包管理器)是一个python发行版，包含了conda、Python等180多个科学包及其依赖项。包含了大量的包，使用anaconda无需再去额外安装所需包。<br>2、内置不同IPython 是一个 python 的交互式 shell，比默认的python shell 好用得多，支持变量自动补全，自动缩进，支持 bash shell 命令，内置了许多很有用的功能和函数。而Anaconda Prompt 是一个Anaconda的终端，可以便捷的操作conda环境。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>macbook使用安装器安装 <a href="https://docs.conda.io/projects/conda/en/latest/user-guide/install/macos.html">https://docs.conda.io/projects/conda/en/latest/user-guide/install/macos.html</a></p><p>安装后首先更新国内源，解决所有命令太慢的问题。编辑~&#x2F;.condarc为以下内容</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show_channel_urls: true</span><br><span class="line">remote_connect_timeout_secs: 30.0</span><br><span class="line">remote_read_timeout_secs: 60.0</span><br><span class="line">channels:</span><br><span class="line">  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span><br><span class="line">  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/</span><br></pre></td></tr></table></figure><p>安装后，首先更新工具自身，避免各种奇奇怪怪的问题</p><ol><li>conda update conda</li><li>conda update anaconda</li><li>pip install –upgrade pip</li></ol><h2 id="命令实操"><a href="#命令实操" class="headerlink" title="命令实操"></a>命令实操</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1. conda init</span><br><span class="line">2.1. conda create -n niuqiang_llama_0413 -- <span class="built_in">clone</span> llama  <span class="comment"># 根据已有环境创建</span></span><br><span class="line">2.2. conda create --name condamainpython python=3.12.4 <span class="comment"># 新建环境。2024-08-22最新版本</span></span><br><span class="line">3. <span class="built_in">source</span> activate condamainpython</span><br><span class="line">4. conda activate condamainpython</span><br><span class="line">5. python --version &amp;&amp; python3 --version</span><br><span class="line">6. conda list python</span><br><span class="line">7. conda search python</span><br><span class="line">8. conda info --envs</span><br><span class="line">9. conda remove --name python27 --all</span><br></pre></td></tr></table></figure><h1 id="跟进记录归档"><a href="#跟进记录归档" class="headerlink" title="跟进记录归档"></a>跟进记录归档</h1><h3 id="静默安装anaconda"><a href="#静默安装anaconda" class="headerlink" title="静默安装anaconda"></a>静默安装anaconda</h3><p>wget <a href="https://repo.anaconda.com/archive/Anaconda3-2021.05-Linux-x86_64.sh">https://repo.anaconda.com/archive/Anaconda3-2021.05-Linux-x86_64.sh</a><br>bash Anaconda3-2021.05-Linux-x86_64.sh<br>source ~&#x2F;anaconda3&#x2F;bin&#x2F;activate</p><p>2024-08-22 14:16:43 anaconda部分的主要内容来自<br>作者：python小达<br>链接：<a href="https://www.zhihu.com/question/353409585/answer/1662315835">https://www.zhihu.com/question/353409585/answer/1662315835</a><br>来源：知乎  </p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 研发工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用awscli操作存储服务，非常好用！</title>
      <link href="/%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%B7%A5%E5%85%B7/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%8E%E5%A4%96%E5%AD%98/aws3/"/>
      <url>/%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%B7%A5%E5%85%B7/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%8E%E5%A4%96%E5%AD%98/aws3/</url>
      
        <content type="html"><![CDATA[<h1 id="awscli"><a href="#awscli" class="headerlink" title="awscli"></a>awscli</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>您可以使用 pip（一种适用于 Python 的程序包管理器）在大多数 Linux 发行版上安装 AWS Command Line Interface 及其依赖项。</p><blockquote><p>pip install awscli –upgrade</p></blockquote><p>Linux &amp; macOS详见：<a href="https://docs.aws.amazon.com/zh_cn/cli/latest/userguide/awscli-install-linux.html">https://docs.aws.amazon.com/zh_cn/cli/latest/userguide/awscli-install-linux.html</a></p><p>Windows 详见：<a href="https://docs.aws.amazon.com/zh_cn/cli/latest/userguide/awscli-install-windows.html">https://docs.aws.amazon.com/zh_cn/cli/latest/userguide/awscli-install-windows.html</a></p><h2 id="工具使用"><a href="#工具使用" class="headerlink" title="工具使用"></a>工具使用</h2><p>AWS CLI 提供两个层级的命令来访问 Amazon S3。</p><p>第一个层级名为 s3，由高级别命令构成，这些命令用于频繁使用的操作，如创建、操作和删除对象及存储桶。</p><p>第二个层级名为 s3api，用于公开所有 Amazon S3 操作，包括修改存储桶访问控制列表 (ACL)、使用跨源的资源共享 (CORS) 或日志记录策略。它允许您执行单凭高级别命令无法完成的高级操作。</p><p>要获得每个层级中提供的所有命令的列表，请在 aws s3 或 aws s3api 命令中使用 help 参数：</p><blockquote><p>aws s3 help</p></blockquote><p>或者</p><blockquote><p>aws s3api help</p></blockquote><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>首先进行配置</p><blockquote><p>aws configure</p></blockquote><p>输入如下</p><pre><code>AWS Access Key ID [None]: xxxAWS Secret Access Key [None]: yyyDefault region name [None]: cn-north-1Default output format [None]: json</code></pre><p><strong>在贝壳，生产环境和测试环境都需要使用生产的ak&amp; sk</strong></p><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>endpoint选项</p><blockquote><p>生产环境：<a href="http://storage.lianjia.com/">http://storage.lianjia.com</a><br>测试环境：<a href="http://test-storage.lianjia.com/">http://test-storage.lianjia.com</a></p></blockquote><p>上传单个文件</p><blockquote><p>aws s3 cp –endpoint-url&#x3D;<a href="http://test-storage.lianjia.com/">http://test-storage.lianjia.com</a> &#x2F;Users&#x2F;niuqiang&#x2F;Documents&#x2F;demo.docx s3:&#x2F;&#x2F;multimodal-interact-media&#x2F;demo.docx<br>或者<br>aws s3api –endpoint-url&#x3D;<endpoint> put-object –bucket&#x3D;test –key&#x3D;test.jpeg –body&#x3D;.&#x2F;test.jpeg</p></blockquote><p>上传目录</p><blockquote><p>aws s3 sync –endpoint-url&#x3D;<endpoint> . s3:&#x2F;&#x2F;test&#x2F;test-folder</p></blockquote><p>查看文件列表</p><blockquote><p>aws s3 ls –endpoint-url&#x3D;<a href="http://test-storage.lianjia.com/">http://test-storage.lianjia.com</a> s3:&#x2F;&#x2F;multimodal-interact-media&#x2F;</p></blockquote><p>下载目录</p><blockquote><p> aws s3 sync –endpoint-url&#x3D;<a href="http://storage.lianjia.com/">http://storage.lianjia.com</a> s3:&#x2F;&#x2F;multimodal-interact-media&#x2F; .&#x2F;</p></blockquote><p>删除文件</p><blockquote><p>aws s3 rm –endpoint-url&#x3D;<a href="http://test-storage.lianjia.com/">http://test-storage.lianjia.com</a> s3:&#x2F;&#x2F;multimodal-interact-media&#x2F;demo.docx</p></blockquote><p>预签名</p><blockquote><p>aws s3 presign –endpoint-url&#x3D;<a href="http://test-storage.lianjia.com/">http://test-storage.lianjia.com</a> s3:&#x2F;&#x2F;multimodal-interact-media&#x2F;E1Ydb0j5Jkg8f3838ab3c7b5bb714c2bcb3a4eb74aeb.docx</p></blockquote><h1 id="某壳实战"><a href="#某壳实战" class="headerlink" title="某壳实战"></a>某壳实战</h1><p>某次收到一个求助，通过aws s3 ls命令获取到的文件列表，最大只能获取到1000行，那么如何才能遍历一个bucket内的所有key</p><p>在网上经过一通调研，发现最终都指向list_objects_v2这个api  </p><ol><li><a href="https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/s3/client/list_objects_v2.html">aws的boto3.ListObjectsV2文档</a></li><li><a href="https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/s3/paginator/ListObjectsV2.html">aws的boto3.Paginator.ListObjectsV2文档</a>  </li><li><a href="https://help.aliyun.com/zh/oss/developer-reference/listobjectsv2">阿里云对象存储的listobjectsv2文档</a></li></ol><p>但是某壳的s3并不支持’ContinuationToken’和’NextContinuationToken’字段，这两个字段一直都是空字符串，而是通过’StartAfter’字段支持分页。秀！</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="string">&#x27;StartAfter&#x27;</span> <span class="keyword">in</span> response:  <span class="comment"># 通过StartAfter来分页，遍历所有的objects</span></span><br><span class="line">    start_after = response[<span class="string">&#x27;StartAfter&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(response[<span class="string">&#x27;Contents&#x27;</span>]) &lt; maxkey <span class="keyword">or</span> <span class="built_in">len</span>(start_after) == <span class="number">0</span>:  <span class="comment"># 终止条件</span></span><br><span class="line">    has_more_objects = <span class="literal">False</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库与外存 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>uniapp开发实战</title>
      <link href="/%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%B7%A5%E5%85%B7/%E5%89%8D%E7%AB%AF%E4%B8%8E%E5%B0%8F%E7%A8%8B%E5%BA%8F/202408uniapp%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/"/>
      <url>/%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%B7%A5%E5%85%B7/%E5%89%8D%E7%AB%AF%E4%B8%8E%E5%B0%8F%E7%A8%8B%E5%BA%8F/202408uniapp%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98/</url>
      
        <content type="html"><![CDATA[<p>需求里至少三大模块：录音、webrtc传入传出音频、播放音频。其他的都是展示模块，没有技术难点</p><h1 id="录音"><a href="#录音" class="headerlink" title="录音"></a>录音</h1><h1 id="webrtc"><a href="#webrtc" class="headerlink" title="webrtc"></a>webrtc</h1><h1 id="播放"><a href="#播放" class="headerlink" title="播放"></a>播放</h1><h1 id="其他功能"><a href="#其他功能" class="headerlink" title="其他功能"></a>其他功能</h1><p>可以参考github搜索 vue+chat，实现相对复杂的功能</p><h1 id="跟进记录归档"><a href="#跟进记录归档" class="headerlink" title="跟进记录归档"></a>跟进记录归档</h1><p>2024-08-28 10:31:24 TODO uni-app实现录音及播放功能 <a href="https://blog.csdn.net/a18792627168/article/details/109853394">https://blog.csdn.net/a18792627168/article/details/109853394</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端与小程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> uniapp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>工程面试模板</title>
      <link href="/%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%B7%A5%E5%85%B7/%E8%81%8C%E4%B8%9A%E8%A7%84%E5%88%92/202407%E5%B7%A5%E7%A8%8B%E9%9D%A2%E8%AF%95%E6%A8%A1%E6%9D%BF/"/>
      <url>/%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%B7%A5%E5%85%B7/%E8%81%8C%E4%B8%9A%E8%A7%84%E5%88%92/202407%E5%B7%A5%E7%A8%8B%E9%9D%A2%E8%AF%95%E6%A8%A1%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<p>2024年06月重新入职贝壳后，整个七月份安排了将近20场面试。</p><p>在面试的过程中发现自己其实缺少面试的方法，每次都重新准备问题，或者被人选的简历细节带着走，所以萌生了总结面试模板的想法。</p><p>换个角度想，自己作为人选时也需要考虑清楚这些问题，所以就有了这篇文章。</p><p>文章适用的对象是初级和中级的后端业务研发工程师。在现在这个资源高度发达的时代，几乎所有做业务的研发都需要具备的基本技能。</p><h1 id="面试模板"><a href="#面试模板" class="headerlink" title="面试模板"></a>面试模板</h1><ol><li>基本情况<ol><li>公司业务。目前是否在职 ；职级<br> 1. </li><li>换工作的原因<br> 1. </li><li>对自己工作方向的规划；对大模型和多模态的了解<br> 1. </li><li>面试进度</li></ol></li><li>项目经历<br> 1. </li><li>项目背景 S<ol><li>为什么要做这件事</li><li>受益对象是哪些；用户量和访问量</li><li>需要什么投入&amp;输入</li></ol></li><li>自己负责的部分 T<ol><li>职责边界在哪里<br> 1. </li><li>解决了什么问题；痛点问题及原因</li><li>达成了什么效果<ol><li></li></ol></li></ol></li><li>方案设计 A<ol><li>在整体中的位置</li><li>各模块的功能  – 你们项目的架构是什么样的，可以说一下数据流向和请求流向吗？</li><li>核心算法</li><li>技术选型；组件选型的考量，有什么优势和限制；无限制的情况下如何重新选型</li><li>每一个组件的工作流和实现原理</li><li>难点在哪；技术上最大的挑战和困难  – 列举一些你在项目中做的比较有挑战的事情或者业务，比如具体的技术细节体现，如何攻坚某个难点，怎么做技术选型的（几乎每个组件都要问一下，问什么要用这个组件，而不是其他的）？<br> 1. </li><li>需要哪些团队协作；有什么问题</li></ol></li><li>达成的效果 R<ol><li>性能测试<br> 1. </li><li>可用性保障和故障排查<ol><li>限流手段<br> 1. </li><li>分布式一致性如何实现<br> 1. </li><li>自动扩缩容策略</li><li>熔断降级策略</li></ol></li><li>项目最终体现的价值</li></ol></li><li>自己有什么思考</li><li>设计一款多模态交互产品的后端架构</li></ol><h1 id="问题环节"><a href="#问题环节" class="headerlink" title="问题环节"></a>问题环节</h1><ol><li>业务层面<ol><li>团队的使命和愿景</li><li>部门的工作横向纵向展开</li></ol></li><li>技术层面围<ol><li>核心能力</li><li>团队情况</li></ol></li></ol><h1 id="综合评价"><a href="#综合评价" class="headerlink" title="综合评价"></a>综合评价</h1><ol><li>发现候选人特长</li><li>根据贝壳职级标准给出评语</li><li>学习能力</li><li>沟通能力</li><li>团队协作</li><li>思考</li></ol><h1 id="技术工具"><a href="#技术工具" class="headerlink" title="技术工具"></a>技术工具</h1><ol><li>Java：虚拟机（内存管理）、容器、多线程、异常、网络框架线程和内存机制、ORM<ol><li>golang八股文速查 <a href="https://blog.csdn.net/qq_43716830/article/details/124405506">https://blog.csdn.net/qq_43716830/article/details/124405506</a></li><li>c++八股 onedrive中的 亮白风格-C++八股文-小贺-v1.0.pdf</li><li>Python 八股 <a href="https://blog.csdn.net/qq_37085158/article/details/126821933">https://blog.csdn.net/qq_37085158/article/details/126821933</a></li></ol></li><li>分布式原理。相关话题：一致性、高可用、故障恢复<ol><li>说一下 raft 的基本原理，有什么作用？</li><li>了解 zk 的 zab 协议吗？</li><li>paxos 之类的了解吗？</li></ol></li><li>mysql、redis、MongoDB、ES、Base<ol><li>它们的组件都有哪些，如何实现的，流程是怎么样的？</li></ol></li><li>mysql八股 <a href="https://mp.weixin.qq.com/s/L26rI11OV8hrfJVy5Yu78g">https://mp.weixin.qq.com/s/L26rI11OV8hrfJVy5Yu78g</a><ol><li>锁类型与使用</li><li>sql的执行过程</li><li>sql和库表优化</li><li>多副本数据同步方式、故障恢复</li><li>如何分库分表，以及如何解决跨表跨库查询的问题。如何分页</li><li>MySQL 中的事务你介绍下，隔离级别都有啥，怎么实现的？</li><li>MVCC 你说一下怎么实现的，如何解决幻读？</li><li>你们的数据库表是如何设计的？如何设计索引，索引的实现有哪几种方式，为什么要用 B+ 树？</li><li>说一说你项目中的反范式的设计，为什么要用反范式？</li><li>说一说你在使用 MySQL 过程中遇到的坑？</li></ol></li><li>redis八股 <a href="https://mp.weixin.qq.com/s/8-Lf5KiyclW77uQwrYDTCw">https://mp.weixin.qq.com/s/8-Lf5KiyclW77uQwrYDTCw</a><ol><li>zset数据结构的实现</li><li>缓存穿透的成因，危害和解决方案</li><li>redis实现分布式锁的方案和问题</li><li>Redis 的数据结构以及源码深究，为何高性能和快速？</li><li>数据一致性方案是怎么做的？如何做持久化？AOF 重写机制怎么做的？过期策略是怎么样的？</li><li>主从同步的流程是啥样的，什么情况下会触发全量和增量同步？如何解决？</li><li>如何利用 Redis 的数据结构设计一个符合业务需求的数据模型？</li><li>哨兵机制介绍一下？</li><li>I&#x2F;O 模型是啥样的？Redis 是单线程还是多线程？</li><li>如何解决大 Key、冷 Key、热 Key 的问题？</li><li>etcd 是用来干嘛的？怎么实现的？为什么选用 etcd 而不是 Redis？</li></ol></li><li>kafka八股 <a href="https://mp.weixin.qq.com/s/8UNtMIllJ03ULZwE9WtVdg">https://mp.weixin.qq.com/s/8UNtMIllJ03ULZwE9WtVdg</a><ol><li>消息队列的使用场景</li><li>rebalance机制</li><li>如何防止重复消费，如何处理消息丢失</li><li>如何避免消息积压以及挤压如何处理</li></ol></li><li>配置中心、消息队列、负载均衡、监控中心。相关话题：配置中心的同步机制、消息队列的partition机制、负载均衡的路由机制、监控中心的采点聚合机制<ol><li>Prometheus 是怎么做监控告警的？有哪些组件，实现流程是怎么样的？</li></ol></li><li>Http、quic、ws、rpc、graphql。相关话题：rpc的序列化、ws的开关机制、graphql的原理<ol><li>RPC 框架如何实现的，如果是你的话，你会怎么设计 RPC 框架？</li><li>GORM 框架中事务和迁移的实现，Hooks 如何实现？</li><li>你对 Jaeger 和 OpenTracing 怎么理解的？那你怎么理解 TraceID 和 SpanID 的定义的？Jaeger 的实现原理是怎么样的？</li></ol></li><li>测试分析工具</li><li>你如何使用copilot、GPT<ol><li>gpt技巧。</li></ol></li><li>如何做到可读性、可维护性和健壮性</li><li>Mvc和三层架构的区别，ddd的实践<ol><li>Ddd相对来说比较契合，有统一的格式输出</li></ol></li></ol>]]></content>
      
      
      <categories>
          
          <category> 职业规划 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>多模态交互产品调研</title>
      <link href="/%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E8%B7%B5/03.%E8%83%BD%E5%8A%9B%E5%8F%8A%E5%B9%B3%E5%8F%B0%E5%BB%BA%E8%AE%BE/202406%E8%B4%9D%E5%A3%B3%E5%A4%9A%E6%A8%A1%E6%80%81%E5%BA%94%E7%94%A8%E4%B8%93%E9%A1%B9/202408%E5%A4%9A%E6%A8%A1%E6%80%81%E4%BA%A4%E4%BA%92%E4%BA%A7%E5%93%81%E8%B0%83%E7%A0%94/"/>
      <url>/%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E8%B7%B5/03.%E8%83%BD%E5%8A%9B%E5%8F%8A%E5%B9%B3%E5%8F%B0%E5%BB%BA%E8%AE%BE/202406%E8%B4%9D%E5%A3%B3%E5%A4%9A%E6%A8%A1%E6%80%81%E5%BA%94%E7%94%A8%E4%B8%93%E9%A1%B9/202408%E5%A4%9A%E6%A8%A1%E6%80%81%E4%BA%A4%E4%BA%92%E4%BA%A7%E5%93%81%E8%B0%83%E7%A0%94/</url>
      
        <content type="html"><![CDATA[<h1 id="背景概述"><a href="#背景概述" class="headerlink" title="背景概述"></a>背景概述</h1><h2 id="竞品调研"><a href="#竞品调研" class="headerlink" title="竞品调研"></a>竞品调研</h2><ol><li><p><a href="https://platform.sensenova.cn/home#/home?1=1&gioNav=1">商汤日日新开放平台</a></p><pre><code> 模型清单 日日新-商量大语言模型 日日新-商量图文多模态大模型 日日新-秒画文生图大模型 日日新-语音大模型 日日新-向量模型 并且额外支持了文件管理</code></pre></li><li></li></ol><h2 id="关键能力和指标"><a href="#关键能力和指标" class="headerlink" title="关键能力和指标"></a>关键能力和指标</h2><h3 id="豆包"><a href="#豆包" class="headerlink" title="豆包"></a>豆包</h3><ol><li>创建和发现智能体</li><li>语音交互</li><li>图片生成</li><li>写作生成</li><li>音乐生成</li><li>拍题答疑</li><li>订阅咨询</li><li>翻译</li><li>帮我回复</li><li>随便听听</li><li>文档阅读</li><li>网页阅读</li></ol><h3 id="海螺"><a href="#海螺" class="headerlink" title="海螺"></a>海螺</h3><ol><li>智能体</li><li>图片解读</li><li>写作生成</li><li>搜索信息</li><li>语音交互</li></ol><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p>2024-07-15 10:02:39 一些调研材料  </p><blockquote><p>集合了很多AI工具的介绍，可以用于发现竞品名录，如豆包 <a href="https://ai-bot.cn/sites/4189.html">AI工具集</a><br>机器之心的PR稿 <a href="https://www.jiqizhixin.com/articles/2020-12-22-7">人机交互新突破：百度发布主动多模态交互技术</a><br>第四范式的官网介绍 <a href="https://www.4paradigm.com/product/SageGPT.html?sem_sagegpt_pc_31&bd_vid=5051625044806563962">https://www.4paradigm.com/product/SageGPT.html?sem_sagegpt_pc_31&amp;bd_vid=5051625044806563962</a><br>看起来是做数字人的 <a href="https://www.youyan3d.com/platform/template?from=bingkw1635/pc&msclkid=bdcad53ee0fd139a0893b35c20f3f130">有言的作品中心</a><br><a href="https://cloud.tencent.com/product/ivh">腾讯云智能数智人</a><br>讯飞AIUI开放平台 <a href="https://aiui.xfyun.cn/">https://aiui.xfyun.cn/</a><br>一家传统软件公司的平台互联网行业解决方案 <a href="https://www.ti-net.com.cn/solution/internet/">天润融通</a><br>360AI基础服务平台 <a href="https://qycloud.360.cn/aiplatform.html">https://qycloud.360.cn/aiplatform.html</a><br>中关村科金 <a href="https://www.zkj.com/abilities">https://www.zkj.com/abilities</a>  </p></blockquote><h1 id="跟进记录归档"><a href="#跟进记录归档" class="headerlink" title="跟进记录归档"></a>跟进记录归档</h1><p>2024-08-13 10:06:41 会议纪要 @邹伟 @韩阳<br>目标：未来一到两年，理想中的交互形式界面：更像人的交互，可能是什么样子。面向C端，可以是线下实体交互</p><p>关键能力和指标：拆分，需要什么能力</p><p>当前现状<br>业界标杆<br>我们</p><p>先实现标杆</p>]]></content>
      
      
      <categories>
          
          <category> 设计与实践 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 能力与平台建设 </tag>
            
            <tag> 多模态应用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>uniapp技术调研</title>
      <link href="/%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%B7%A5%E5%85%B7/%E5%89%8D%E7%AB%AF%E4%B8%8E%E5%B0%8F%E7%A8%8B%E5%BA%8F/202407uniapp%E6%8A%80%E6%9C%AF%E8%B0%83%E7%A0%94/"/>
      <url>/%E6%8A%80%E6%9C%AF%E4%B8%8E%E5%B7%A5%E5%85%B7/%E5%89%8D%E7%AB%AF%E4%B8%8E%E5%B0%8F%E7%A8%8B%E5%BA%8F/202407uniapp%E6%8A%80%E6%9C%AF%E8%B0%83%E7%A0%94/</url>
      
        <content type="html"><![CDATA[<h1 id="是什么"><a href="#是什么" class="headerlink" title="是什么"></a>是什么</h1><p>uni-app 是一个使用 Vue.js 开发所有前端应用的框架，开发者编写一套代码，可发布到iOS、Android、Web（响应式）、以及各种小程序（微信&#x2F;支付宝&#x2F;百度&#x2F;头条&#x2F;飞书&#x2F;QQ&#x2F;快手&#x2F;钉钉&#x2F;淘宝）、快应用等多个平台。</p><p>DCloud的初心是什么？</p><pre><code>为开发者提供免费、高效的开发工具，让天下没有难做的应用改进应用形态，让用户更方便地获取数字服务</code></pre><p><strong>DCloud也再次承诺不会对uni-app、HBuilderX等工具收费</strong>，感谢数百万开发者的一路陪伴，也请一直监督我们不忘初心！</p><blockquote><p>但是使用过程中，打包环节强行要求与dcloud账号绑定，即使未来出现某种形式的收费也不意外</p></blockquote><h1 id="uni-app组成和跨端原理"><a href="#uni-app组成和跨端原理" class="headerlink" title="uni-app组成和跨端原理"></a>uni-app组成和跨端原理</h1><h1 id="基本语言和开发规范"><a href="#基本语言和开发规范" class="headerlink" title="基本语言和开发规范"></a>基本语言和开发规范</h1><p>uni-app代码编写，基本语言包括js、vue、css。以及ts、scss等css预编译器。</p><p>为了实现多端兼容，综合考虑编译速度、运行性能等因素，uni-app 约定了如下开发规范：</p><pre><code>页面文件遵循 Vue 单文件组件 (SFC) 规范，即每个页面是一个.vue文件组件标签靠近小程序规范，详见uni-app 组件规范接口能力（JS API）靠近小程序规范，但需将前缀 wx、my 等替换为 uni，详见uni-app接口规范数据绑定及事件处理同 Vue.js 规范，同时补充了应用生命周期及页面的生命周期如需兼容app-nvue平台，建议使用flex布局进行开发</code></pre><p>uni-app分编译器和运行时（runtime）。uni-app能实现一套代码、多端运行，是通过这2部分配合完成的。</p><p>编译器将开发者的代码进行编译，编译的输出物由各个终端的runtime进行解析，每个平台（Web、Android App、iOS App、各家小程序）都有各自的runtime。</p><h1 id="编译器"><a href="#编译器" class="headerlink" title="编译器"></a>编译器</h1><p>编译器运行在电脑开发环境。一般是内置在HBuilderX工具中，也可以使用独立的cli版。<br>开发者按uni-app规范编写代码，由编译器将开发者的代码编译生成每个平台支持的特有代码</p><p>编译器支持条件编译，即可以指定某部分代码只编译到特定的终端平台。从而将公用和个性化融合在一个工程中。</p><h1 id="uni-app-runtime"><a href="#uni-app-runtime" class="headerlink" title="uni-app runtime"></a>uni-app runtime</h1><p>包括3部分：基础框架、组件、API。</p><h2 id="基础框架："><a href="#基础框架：" class="headerlink" title="基础框架："></a>基础框架：</h2><p>包括语法、数据驱动、全局文件、应用管理、页面管理、js引擎、渲染和排版引擎等<br>在web和小程序上，不需要uni-app提供js引擎和排版引擎，直接使用浏览器和小程序的即可。但app上需要uni-app提供<br>App的js引擎：App-Android上，uni-app的js引擎是v8，App-iOS是jscore<br>App的渲染引擎：同时提供了2套渲染引擎，.vue页面文件由webview渲染，原理与小程序相同；.nvue页面文件由原生渲染，原理与react native相同</p><h2 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h2><p>runtime中包括的组件只有基础组件，如&lt;view&gt;、&lt;button&gt;等。扩展组件不包含在uni-app的runtime中，而是下载到用户的项目代码中。（这些组件都是vue组件）<br>为了降低开发者的学习成本，uni-app的内置基础组件命名规范与小程序基本相同。<br>这几十个组件不管在哪个平台，已被处理为均有一致表现。<br>在小程序端，uni-app基础组件会直接转义为小程序自己的内置组件。在小程序的runtime中不占体积。<br>在web和android、iOS端，这几十个组件都在uni-app的runtime中，会占用一定体积，相当于内置了一套ui库。<br>组件的扩展：<br>有了几十个基础组件，大多数扩展组件也都是基于这些基础组件封装的。比如官方提供的扩展ui库uni ui。<br>在web平台，for web的各种ui库（如elementUI）也可以使用，但这些库由于操作了dom，无法跨端在app和小程序中使用。<br>在App平台，uni-app也支持使用原生编程语言来自行扩展原生组件，比如原生的地图、ar等。<br>uni-app同时支持将微信自定义组件运行到微信小程序、web、app这3个平台。注意微信自定义组件不是vue组件。  </p><h2 id="API："><a href="#API：" class="headerlink" title="API："></a>API：</h2><p>uni-app runtime内置了大量常见的、跨端的 API，比如联网(uni.request)、读取存储(uni.getStorage)<br>同时uni-app不限制各端原生平台的API调用。开发者可以在uni-app框架中无限制的调用该平台所有能使用的API。即，在小程序平台，小程序的所有API都可以使用；在web平台，浏览器的所有API都可使用；在iOS和Android平台，os的所有API都可以使用。<br>也就是说，使用uni-app的标准API，可以跨端使用。但对于不跨端的部分，仍可以调用该端的专有API。由于常见的API都已经被封装内置，所以日常开发时，开发者只需关注uni标准API，当需要调用特色端能力时在条件编译里编写特色API调用代码。</p><h1 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h1><p>一个uni-app工程，默认包含如下目录及文件：</p><pre><code>┌─uniCloud 云空间目录，支付宝小程序云为uniCloud-alipay，阿里云为uniCloud-aliyun，腾讯云为uniCloud-tcb（详见uniCloud）│─components 符合vue组件规范的uni-app组件目录│ └─comp-a.vue 可复用的a组件├─utssdk 存放uts文件├─pages 业务页面文件存放的目录│ ├─index│ │ └─index.vue index页面│ └─list│ └─list.vue list页面├─static 存放应用引用的本地静态资源（如图片、视频等）的目录，注意：静态资源都应存放于此目录├─uni_modules 存放uni_module 详见├─platforms 存放各平台专用页面的目录，详见├─nativeplugins App原生语言插件 详见├─nativeResources App端原生资源目录│ ├─android Android原生资源目录 详见| └─ios iOS原生资源目录 详见├─hybrid App端存放本地html文件的目录，详见├─wxcomponents 存放小程序组件的目录，详见├─unpackage 非工程代码，一般存放运行或发行的编译结果├─main.js Vue初始化入口文件├─App.vue 应用配置，用来配置App全局样式以及监听 应用生命周期├─pages.json 配置页面路由、导航条、选项卡等页面类信息，详见├─manifest.json 配置应用名称、appid、logo、版本等打包信息，详见├─AndroidManifest.xml Android原生应用清单文件 详见├─Info.plist iOS原生应用配置文件 详见└─uni.scss 内置的常用样式变量</code></pre><h2 id="static"><a href="#static" class="headerlink" title="static"></a>static</h2><p>注意事项，如果static里有一些没有使用的废文件，也会被打包到编译包里，造成体积变大。</p><p>另外注意，static目录支持特殊的平台子目录，比如web、app、mp-weixin等，这些目录存放专有平台的文件，这些平台的文件在打包其他平台时不会被包含。</p><p>非 static 目录下的文件（vue组件、js、css 等）只有被引用时，才会被打包编译。</p><p>css、less&#x2F;scss 等资源不要放在 static 目录下，建议这些公用的资源放在自建的 common 目录下。</p><h1 id="页面内容构成"><a href="#页面内容构成" class="headerlink" title="页面内容构成"></a>页面内容构成</h1><p>uni-app 页面基于 vue 规范。一个页面内，有3个根节点标签：</p><pre><code>模板组件区 template脚本区 script样式区 style</code></pre><p>在vue的选项式（option）规范中，script下包含 export default {}。除了选项式，还有 组合式 写法。</p><p>页面级的代码大多写在 export default {} 中。写在里面的代码，会随着页面关闭而关闭。</p><h2 id="export-default-外的代码"><a href="#export-default-外的代码" class="headerlink" title="export default 外的代码"></a>export default 外的代码</h2><p>写在 export default {} 外面的代码，一般有几种情况：</p><pre><code>引入第三方 js/ts 模块引入非 easycom 的组件（一般组件推荐使用easycom，无需导入注册）在 ts/uts 中，对 data 进行类型定义定义作用域更大的变量</code></pre><p>开发者应谨慎编写 export default {} 外面的代码，这里的代码有2个注意事项：</p><pre><code>影响应用性能。这部分代码在应用启动时执行，而不是页面加载。如果这里的代码写的太复杂，会影响应用启动速度，占用更多内存。不跟随组件、页面关闭而回收。在外层的静态变量不会跟随页面关闭而回收。如果必要你需要手动处理。比如 beforeDestroy 或 destroyed 生命周期进行处理。</code></pre><h2 id="export-default-里的代码"><a href="#export-default-里的代码" class="headerlink" title="export default 里的代码"></a>export default 里的代码</h2><p>export default {} 里的内容，是页面的主要逻辑代码。包括几部分：</p><p>data：template模板中需要使用的数据。具体 另见<br>页面生命周期：如页面加载、隐藏、关闭，具体 见下<br>methods方法，如按钮点击、屏幕滚动</p><h2 id="style样式区"><a href="#style样式区" class="headerlink" title="style样式区"></a>style样式区</h2><p>style的写法与web的css基本相同</p><h2 id="页面加载时序介绍"><a href="#页面加载时序介绍" class="headerlink" title="页面加载时序介绍"></a>页面加载时序介绍</h2><p>接下来我们介绍onLoad、onReady、onShow的先后关系，页面加载的详细流程。</p><ol><li><p>uni-app框架，首先根据pages.json的配置，创建页面<br>所以原生导航栏是最快显示的。页面背景色也应该在这里配置。</p></li><li><p>根据页面template里的组件，创建dom。<br>这里的dom创建仅包含第一批处理的静态dom。对于通过js&#x2F;uts更新data然后通过v-for再创建的列表数据，不在第一批处理。</p></li><li><p>触发onLoad<br>此时页面还未显示，没有开始进入的转场动画，页面dom还不存在。</p></li></ol><p>所以这里不能直接操作dom（可以修改data，因为vue框架会等待dom准备后再更新界面）</p><p>onLoad比较适合的操作是：接受上页的参数，联网取数据，更新data。</p><p>手机都是多核的，uni.request或云开发联网，在子线程运行，不会干扰UI线程的入场动画，并行处理可以更快的拿到数据、渲染界面。</p><p>但onLoad里不适合进行大量同步耗时运算，因为此时转场动画还没开始。</p><ol start="4"><li><p>转场动画开始<br>新页面开始进入的转场动画，动画默认耗时300ms，可以在路由API中调节时长。</p></li><li><p>页面onReady<br>第2步创建dom是虚拟dom，dom创建后需要经历一段时间，UI层才能完成了页面上真实元素的创建，即触发了onReady。</p></li></ol><p>onReady后，页面元素就可以自由操作了，比如ref获取节点。同时首批界面也渲染了。</p><p>注意：onReady和转场动画开始、结束之间，没有必然的先后顺序，完全取决于dom的数量和复杂度。</p><p>如果元素排版和渲染够快，转场动画刚开始就渲染好了；</p><h2 id="getApp"><a href="#getApp" class="headerlink" title="getApp()"></a>getApp()</h2><p>getApp() 函数用于获取当前应用实例，一般用于获取globalData。也可通过应用实例调用 App.vue methods 中定义的方法。</p><p>不要在定义于 App() 内的函数中，或调用 App 前调用 getApp() ，可以通过 this.$scope 获取对应的app实例<br>通过 getApp() 获取实例之后，不要私自调用生命周期函数。<br>当在首页nvue中使用getApp()不一定可以获取真正的App对象。对此提供了const app &#x3D; getApp({allowDefault: true})用来获取原始的App对象，可以用来在首页对globalData等初始化</p><h2 id="getCurrentPages"><a href="#getCurrentPages" class="headerlink" title="getCurrentPages()"></a>getCurrentPages()</h2><p>getCurrentPages() 函数用于获取当前页面栈的实例，以数组形式按栈的顺序给出，数组中的元素为页面实例，第一个元素为首页，最后一个元素为当前页面。</p><p>getCurrentPages() 仅用于展示页面栈的情况，请勿修改页面栈，以免造成页面状态错误。</p><p>**navigateTo, redirectTo 只能打开非 tabBar 页面。<br>switchTab 只能打开 tabBar 页面。  **<br>&#96;reLaunch&#96;&#96; 可以打开任意页面。<br>页面底部的 tabBar 由页面决定，即只要是定义为 tabBar 的页面，底部都有 tabBar。<br>不能在首页 onReady 之前进行页面跳转。</p><h2 id="页面通讯"><a href="#页面通讯" class="headerlink" title="页面通讯"></a>页面通讯</h2><p>uni.$emit(eventName,OBJECT)<br>触发全局的自定义事件。附加参数都会传给监听器回调。</p><p>uni.$on(eventName,callback)<br>监听全局的自定义事件。事件可以由 uni.$emit 触发，回调函数会接收所有传入事件触发函数的额外参数。</p><p>uni.$once(eventName,callback)<br>监听全局的自定义事件。事件可以由 uni.$emit 触发，但是只触发一次，在第一次触发之后移除监听器。</p><p>uni.$off([eventName, callback])<br>移除全局自定义事件监听器。</p><p>uni.$emit、 uni.$on 、 uni.$once 、uni.$off 触发的事件都是 App 全局级别的，跨任意组件，页面，nvue，vue 等<br>使用时，注意及时销毁事件监听，比如，页面 onLoad 里边 uni.$on 注册监听，onUnload 里边 uni.$off 移除，或者一次性的事件，直接使用 uni.$once 监听</p><h2 id="路由跳转"><a href="#路由跳转" class="headerlink" title="路由跳转"></a>路由跳转</h2><p>uni-app 有两种页面路由跳转方式：使用navigator组件跳转、调用API跳转。</p><p>页面返回时会自动关闭 loading 及 toast, modal 及 actionSheet 不会自动关闭。<br>页面关闭时，只是销毁了页面实例，未完成的网络请求、计时器等副作用需开发者自行处理。</p><p>uni-app 支持在 template 模板中嵌套 template 和 block，用来进行 条件渲染 和 列表渲染。</p><h1 id="js-语法支持"><a href="#js-语法支持" class="headerlink" title="js 语法支持"></a>js 语法支持</h1><h2 id="标准js和浏览器js的区别"><a href="#标准js和浏览器js的区别" class="headerlink" title="标准js和浏览器js的区别"></a>标准js和浏览器js的区别</h2><p>uni-app的js代码，h5端运行于浏览器中。非h5端（包含小程序和App），Android平台运行在v8引擎中，iOS平台运行在iOS自带的jscore引擎中，都没有运行在浏览器或webview里。</p><p>所以uni-app的非H5端，一样支持标准js，支持if、for等语法，支持字符串、数字、时间、布尔值、数组、自定义对象等变量类型及各种处理方法。仅仅是不支持window、document、navigator等浏览器专用对象。</p><h2 id="APP端"><a href="#APP端" class="headerlink" title="APP端"></a>APP端</h2><ol><li>Android<br>JS脚本运行在独立Google V8引擎中，版本与Chrome83一致，因此支持的语法与Android系统版本无关</li></ol><p>vue页面渲染在系统Webview中，受Android系统版本影响，在Android低端机上存在css浏览器兼容性问题，太新的css语法在低版本不支持<br>2. IOS<br>JS脚本运行在iOS操作系统提供的JavaScriptCore 引擎，因此支持的语法与iOS系统有关，跟iOS系统的Safari浏览器一致</p><p>vue页面渲染在系统WKWebview中，受iOS系统版本影响，兼容性与iOS系统的Safari浏览器一致</p><h1 id="页面样式与布局"><a href="#页面样式与布局" class="headerlink" title="页面样式与布局"></a>页面样式与布局</h1><p>uni-app 有 vue 页面、nvue 页面、uvue页面。<br>vue 页面是 webview 渲染的</p><h2 id="内联样式"><a href="#内联样式" class="headerlink" title="内联样式"></a>内联样式</h2><p>框架组件上支持使用 style、class 属性来控制组件的样式。</p><p>style：静态的样式统一写到 class 中。style 接收动态的样式，在运行时会进行解析，请尽量避免将静态的样式写进 style 中，以免影响渲染速度。</p><p>class：用于指定样式规则，其属性值是样式规则中类选择器名(样式类名)的集合，样式类名不需要带上.，样式类名之间用空格分隔。</p><h2 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h2><p>目前支持的选择器有：</p><table><thead><tr><th>选择器</th><th>样例</th><th>样例描述</th></tr></thead><tbody><tr><td>.class</td><td>.intro</td><td>选择所有拥有 class&#x3D;”intro” 的组件</td></tr><tr><td>#id</td><td>#firstname</td><td>选择拥有 id&#x3D;”firstname” 的组件</td></tr><tr><td>element</td><td>view</td><td>选择所有 view 组件</td></tr><tr><td>element, element</td><td>view, checkbox</td><td>选择所有文档的 view 组件和所有的 checkbox 组件</td></tr><tr><td>::after</td><td>view::after</td><td>在 view 组件后边插入内容，仅 vue 页面生效</td></tr><tr><td>::before</td><td>view::before</td><td>在 view 组件前边插入内容，仅 vue 页面生效</td></tr></tbody></table><h1 id="快速上手"><a href="#快速上手" class="headerlink" title="快速上手"></a>快速上手</h1><p>2024年07月03日20:06:57 官方给的hello uni-app可以直接h5和weapp启动，并且提供了组件模版，快速开发就它了</p><h2 id="Recorder-core"><a href="#Recorder-core" class="headerlink" title="Recorder-core"></a>Recorder-core</h2><p>2024-08-05 10:08:27 跨平台Recorder录音插件：支持多种格式、音频可视化、实时上传、语音识别 <a href="https://ext.dcloud.net.cn/plugin?name=Recorder-UniCore">https://ext.dcloud.net.cn/plugin?name=Recorder-UniCore</a></p><blockquote><p>在安卓端试用时疑似有音爆问题。时间上也来不及，所以暂时先用android native实现<br><img src="/./resources/uniapp-recordercore%E5%9C%A8android%E7%AB%AF%E5%BD%95%E9%9F%B3%E9%9F%B3%E7%88%86%E9%97%AE%E9%A2%98.png"></p></blockquote><h2 id="uniapp集成android原生sdk"><a href="#uniapp集成android原生sdk" class="headerlink" title="uniapp集成android原生sdk"></a>uniapp集成android原生sdk</h2><p>2024-08-05 10:12:21 TODO 需要探索的路径，估计有很多模块都需要这么实现 <a href="https://blog.csdn.net/cuper_/article/details/127993632">https://blog.csdn.net/cuper_/article/details/127993632</a></p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p>2024-07-12 14:59:06 什么是uni-app <a href="https://uniapp.dcloud.net.cn/">https://uniapp.dcloud.net.cn/</a></p><blockquote><p>比较有用的选型指南，解答为什么使用uniapp的问题</p></blockquote><p>2024-07-15 09:56:56 基础概念和学习vue3 <a href="https://uniapp.dcloud.net.cn/tutorial/vue3-basics.html">https://uniapp.dcloud.net.cn/tutorial/vue3-basics.html</a></p><blockquote><p>vue3的内容比较丰富，可能需要经常回顾，就不往这个文档里摘抄了</p></blockquote><p>2024-07-15 09:57:12 小程序转uniapp指南 <a href="https://ask.dcloud.net.cn/article/35786">https://ask.dcloud.net.cn/article/35786</a></p><p>2024-07-15 09:57:28 uniapp官方教程 <a href="https://ke.qq.com/course/3169971#term_id=103296764">https://ke.qq.com/course/3169971#term_id=103296764</a></p><blockquote><p>没有太多有效的内容</p></blockquote><p>2024-07-15 10:01:43 vue3官方简明教程 <a href="https://cn.vuejs.org/guide/introduction.html">https://cn.vuejs.org/guide/introduction.html</a></p><p>2024-08-01 15:12:36 使用vscode开发 uniapp<br><a href="https://ask.dcloud.net.cn/article/36286">https://ask.dcloud.net.cn/article/36286</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端与小程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> uniapp </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
